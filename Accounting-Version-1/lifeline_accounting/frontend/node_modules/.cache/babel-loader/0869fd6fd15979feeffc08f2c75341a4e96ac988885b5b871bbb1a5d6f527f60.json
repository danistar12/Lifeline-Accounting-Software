{"ast":null,"code":"import _regenerator from \"C:/Users/ds3297l/Desktop/Accountint Software/Design 2/lifeline_accounting/frontend/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ds3297l/Desktop/Accountint Software/Design 2/lifeline_accounting/frontend/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\naxios.defaults.withCredentials = true;\nexport default createStore({\n  state: {\n    user: null,\n    loading: false,\n    error: null,\n    selectedCompany: {\n      id: localStorage.getItem('selectedCompanyId') || null\n    }\n  },\n  mutations: {\n    setUser: function setUser(state, user) {\n      state.user = user;\n    },\n    setLoading: function setLoading(state, loading) {\n      state.loading = loading;\n    },\n    setError: function setError(state, error) {\n      state.error = error;\n    },\n    setUserCompanies: function setUserCompanies(state, companies) {\n      if (state.user) {\n        state.user.companies = companies;\n      }\n    },\n    setSelectedCompany: function setSelectedCompany(state, companyId) {\n      state.selectedCompany.id = companyId;\n      localStorage.setItem('selectedCompanyId', companyId);\n    },\n    clearAuthData: function clearAuthData(state) {\n      state.user = null;\n      state.selectedCompany.id = null;\n      localStorage.removeItem('selectedCompanyId');\n      state.error = null;\n    }\n  },\n  actions: {\n    login: function login(_ref, authData) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var commit, dispatch, response, _error$response, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              commit = _ref.commit, dispatch = _ref.dispatch;\n              commit('setLoading', true);\n              commit('setError', null);\n              _context.p = 1;\n              _context.n = 2;\n              return axios.get('/api/accounts/auth/csrf/');\n            case 2:\n              _context.n = 3;\n              return axios.post('/api/accounts/auth/login/', authData);\n            case 3:\n              _context.n = 4;\n              return axios.get('/api/accounts/auth/user/');\n            case 4:\n              response = _context.v;\n              commit('setUser', response.data);\n              commit('setLoading', false);\n              return _context.a(2, response.data);\n            case 5:\n              _context.p = 5;\n              _t = _context.v;\n              commit('setLoading', false);\n              commit('setError', ((_error$response = _t.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.detail) || 'Login failed');\n              throw _t;\n            case 6:\n              return _context.a(2);\n          }\n        }, _callee, null, [[1, 5]]);\n      }))();\n    },\n    logout: function logout(_ref2) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var commit, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.p = 1;\n              _context2.n = 2;\n              return axios.post('/api/accounts/auth/logout/');\n            case 2:\n              commit('clearAuthData');\n              _context2.n = 4;\n              break;\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              console.error('Logout failed:', _t2);\n              // Still clear the auth data even if the logout request fails\n              commit('clearAuthData');\n              throw _t2;\n            case 4:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[1, 3]]);\n      }))();\n    },\n    me: function me(_ref3) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var commit, response, _t3;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.p = 1;\n              _context3.n = 2;\n              return axios.get('/api/accounts/auth/user/');\n            case 2:\n              response = _context3.v;\n              commit('setUser', response.data);\n              return _context3.a(2, response.data);\n            case 3:\n              _context3.p = 3;\n              _t3 = _context3.v;\n              commit('clearAuthData');\n              throw _t3;\n            case 4:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[1, 3]]);\n      }))();\n    }\n  },\n  getters: {\n    isLoggedIn: function isLoggedIn(state) {\n      return !!state.user;\n    },\n    selectedCompanyId: function selectedCompanyId(state) {\n      return state.selectedCompany.id;\n    }\n  }\n});","map":{"version":3,"names":["createStore","axios","defaults","xsrfCookieName","xsrfHeaderName","withCredentials","state","user","loading","error","selectedCompany","id","localStorage","getItem","mutations","setUser","setLoading","setError","setUserCompanies","companies","setSelectedCompany","companyId","setItem","clearAuthData","removeItem","actions","login","_ref","authData","_asyncToGenerator","_regenerator","m","_callee","commit","dispatch","response","_error$response","_t","w","_context","n","p","get","post","v","data","a","detail","logout","_ref2","_callee2","_t2","_context2","console","me","_ref3","_callee3","_t3","_context3","getters","isLoggedIn","selectedCompanyId"],"sources":["C:/Users/ds3297l/Desktop/Accountint Software/Design 2/lifeline_accounting/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\nimport axios from 'axios'\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\r\naxios.defaults.withCredentials = true\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    selectedCompany: {\r\n      id: localStorage.getItem('selectedCompanyId') || null,\r\n    }\r\n  },\r\n  mutations: {\r\n    setUser(state, user) {\r\n      state.user = user;\r\n    },\r\n    setLoading(state, loading) {\r\n      state.loading = loading;\r\n    },\r\n    setError(state, error) {\r\n      state.error = error;\r\n    },\r\n    setUserCompanies(state, companies) {\r\n      if (state.user) {\r\n        state.user.companies = companies;\r\n      }\r\n    },\r\n    setSelectedCompany(state, companyId) {\r\n      state.selectedCompany.id = companyId;\r\n      localStorage.setItem('selectedCompanyId', companyId);\r\n    },\r\n    clearAuthData(state) {\r\n      state.user = null;\r\n      state.selectedCompany.id = null;\r\n      localStorage.removeItem('selectedCompanyId');\r\n      state.error = null;\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit, dispatch }, authData) {\r\n      commit('setLoading', true);\r\n      commit('setError', null);\r\n      \r\n      try {\r\n        // Get CSRF token\r\n        await axios.get('/api/accounts/auth/csrf/');\r\n        \r\n        // Login\r\n        await axios.post('/api/accounts/auth/login/', authData);\r\n        \r\n        // Fetch user data\r\n        const response = await axios.get('/api/accounts/auth/user/');\r\n        commit('setUser', response.data);\r\n        \r\n        commit('setLoading', false);\r\n        return response.data;\r\n      } catch (error) {\r\n        commit('setLoading', false);\r\n        commit('setError', error.response?.data?.detail || 'Login failed');\r\n        throw error;\r\n      }\r\n    },\r\n    \r\n    async logout({ commit }) {\r\n      try {\r\n        await axios.post('/api/accounts/auth/logout/');\r\n        commit('clearAuthData');\r\n      } catch (error) {\r\n        console.error('Logout failed:', error);\r\n        // Still clear the auth data even if the logout request fails\r\n        commit('clearAuthData');\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    async me({ commit }) {\r\n      try {\r\n        const response = await axios.get('/api/accounts/auth/user/');\r\n        commit('setUser', response.data);\r\n        return response.data;\r\n      } catch (error) {\r\n        commit('clearAuthData');\r\n        throw error;\r\n      }\r\n    }\r\n  },\r\n  getters: {\r\n    isLoggedIn: state => !!state.user,\r\n    selectedCompanyId: state => state.selectedCompany.id\r\n  }\r\n})\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}