{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"Payrolls\", -1 /* CACHED */)), _createCommentVNode(\" Add payroll form \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.addPayroll && $options.addPayroll(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPayroll.run_date = $event),\n    type: \"date\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPayroll.run_date]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newPayroll.pay_period_start = $event),\n    type: \"date\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPayroll.pay_period_start]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newPayroll.pay_period_end = $event),\n    type: \"date\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPayroll.pay_period_end]]), _cache[4] || (_cache[4] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Add Payroll\", -1 /* CACHED */))], 32 /* NEED_HYDRATION */), _createCommentVNode(\" Payrolls table \"), _createElementVNode(\"table\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Run Date\"), _createElementVNode(\"th\", null, \"Pay Period Start\"), _createElementVNode(\"th\", null, \"Pay Period End\"), _createElementVNode(\"th\", null, \"Actions\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.payrolls, payroll => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: payroll.payroll_id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(payroll.run_date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(payroll.pay_period_start), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(payroll.pay_period_end), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editPayroll(payroll)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_1), _createElementVNode(\"button\", {\n      onClick: $event => $options.deletePayroll(payroll.payroll_id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_2)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","addPayroll","$data","newPayroll","run_date","$event","type","required","pay_period_start","pay_period_end","_Fragment","_renderList","payrolls","payroll","key","payroll_id","_toDisplayString","onClick","editPayroll","_hoisted_1","deletePayroll","_hoisted_2"],"sources":["C:\\Users\\ds3297l\\Desktop\\Accountint Software\\Design 2\\lifeline_accounting\\frontend\\src\\views\\payroll\\Payrolls.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Payrolls</h1>\r\n    <!-- Add payroll form -->\r\n    <form @submit.prevent=\"addPayroll\">\r\n      <input v-model=\"newPayroll.run_date\" type=\"date\" required>\r\n      <input v-model=\"newPayroll.pay_period_start\" type=\"date\" required>\r\n      <input v-model=\"newPayroll.pay_period_end\" type=\"date\" required>\r\n      <button type=\"submit\">Add Payroll</button>\r\n    </form>\r\n\r\n    <!-- Payrolls table -->\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Run Date</th>\r\n          <th>Pay Period Start</th>\r\n          <th>Pay Period End</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"payroll in payrolls\" :key=\"payroll.payroll_id\">\r\n          <td>{{ payroll.run_date }}</td>\r\n          <td>{{ payroll.pay_period_start }}</td>\r\n          <td>{{ payroll.pay_period_end }}</td>\r\n          <td>\r\n            <button @click=\"editPayroll(payroll)\">Edit</button>\r\n            <button @click=\"deletePayroll(payroll.payroll_id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      payrolls: [],\r\n      newPayroll: {\r\n        run_date: '',\r\n        pay_period_start: '',\r\n        pay_period_end: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    fetchPayrolls() {\r\n      axios.get('/api/payroll/payrolls/')\r\n        .then(response => {\r\n          this.payrolls = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching payrolls:', error);\r\n        });\r\n    },\r\n    addPayroll() {\r\n      axios.post('/api/payroll/payrolls/', this.newPayroll)\r\n        .then(response => {\r\n          this.payrolls.push(response.data);\r\n          this.newPayroll = { run_date: '', pay_period_start: '', pay_period_end: '' };\r\n        })\r\n        .catch(error => {\r\n          console.error('Error adding payroll:', error);\r\n        });\r\n    },\r\n    editPayroll(payroll) {\r\n      // Implementation for editing a payroll\r\n    },\r\n    deletePayroll(payrollId) {\r\n      axios.delete(`/api/payroll/payrolls/${payrollId}/`)\r\n        .then(() => {\r\n          this.payrolls = this.payrolls.filter(payroll => payroll.payroll_id !== payrollId);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error deleting payroll:', error);\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchPayrolls();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n</style>\r\n"],"mappings":";;;;uBACEA,mBAAA,CAgCM,c,0BA/BJC,mBAAA,CAAiB,YAAb,UAAQ,qBACZC,mBAAA,sBAAyB,EACzBD,mBAAA,CAKO;IALAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;sBAC/BL,mBAAA,CAA0D;+DAA1CQ,KAAA,CAAAC,UAAU,CAACC,QAAQ,GAAAC,MAAA;IAAEC,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAAjCL,KAAA,CAAAC,UAAU,CAACC,QAAQ,E,mBACnCV,mBAAA,CAAkE;+DAAlDQ,KAAA,CAAAC,UAAU,CAACK,gBAAgB,GAAAH,MAAA;IAAEC,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAAzCL,KAAA,CAAAC,UAAU,CAACK,gBAAgB,E,mBAC3Cd,mBAAA,CAAgE;+DAAhDQ,KAAA,CAAAC,UAAU,CAACM,cAAc,GAAAJ,MAAA;IAAEC,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR;iDAAvCL,KAAA,CAAAC,UAAU,CAACM,cAAc,E,6BACzCf,mBAAA,CAA0C;IAAlCY,IAAI,EAAC;EAAQ,GAAC,aAAW,oB,4BAGnCX,mBAAA,oBAAuB,EACvBD,mBAAA,CAoBQ,gB,0BAnBNA,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAyB,YAArB,kBAAgB,GACpBA,mBAAA,CAAuB,YAAnB,gBAAc,GAClBA,mBAAA,CAAgB,YAAZ,SAAO,E,uBAGfA,mBAAA,CAUQ,iB,kBATND,mBAAA,CAQKiB,SAAA,QAAAC,WAAA,CARiBT,KAAA,CAAAU,QAAQ,EAAnBC,OAAO;yBAAlBpB,mBAAA,CAQK;MAR4BqB,GAAG,EAAED,OAAO,CAACE;QAC5CrB,mBAAA,CAA+B,YAAAsB,gBAAA,CAAxBH,OAAO,CAACT,QAAQ,kBACvBV,mBAAA,CAAuC,YAAAsB,gBAAA,CAAhCH,OAAO,CAACL,gBAAgB,kBAC/Bd,mBAAA,CAAqC,YAAAsB,gBAAA,CAA9BH,OAAO,CAACJ,cAAc,kBAC7Bf,mBAAA,CAGK,aAFHA,mBAAA,CAAmD;MAA1CuB,OAAK,EAAAZ,MAAA,IAAEL,QAAA,CAAAkB,WAAW,CAACL,OAAO;OAAG,MAAI,iBAAAM,UAAA,GAC1CzB,mBAAA,CAAkE;MAAzDuB,OAAK,EAAAZ,MAAA,IAAEL,QAAA,CAAAoB,aAAa,CAACP,OAAO,CAACE,UAAU;OAAG,QAAM,iBAAAM,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}