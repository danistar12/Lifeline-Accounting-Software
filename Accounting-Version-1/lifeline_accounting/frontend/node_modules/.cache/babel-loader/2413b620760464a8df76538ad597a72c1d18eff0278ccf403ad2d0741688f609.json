{"ast":null,"code":"import _objectSpread from \"C:/Users/DLloy/OneDrive/Desktop/Data_Centers/Lifeline Accounting Software/Accounting-Version-1/lifeline_accounting/frontend/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { mapGetters, mapActions } from 'vuex';\nimport axios from 'axios';\nexport default {\n  computed: _objectSpread(_objectSpread({}, mapGetters(['isLoggedIn'])), {}, {\n    companies: function companies() {\n      var _this$$store$state$us;\n      return ((_this$$store$state$us = this.$store.state.user) === null || _this$$store$state$us === void 0 ? void 0 : _this$$store$state$us.companies) || [];\n    },\n    selectedCompany: {\n      get: function get() {\n        return this.$store.state.selectedCompany.id;\n      },\n      set: function set(value) {\n        this.$store.commit('setSelectedCompany', value);\n      }\n    }\n  }),\n  methods: _objectSpread(_objectSpread({}, mapActions(['loadCompanyData'])), {}, {\n    updateCompany: function updateCompany() {\n      // Set the company ID header for API requests\n      axios.defaults.headers.common['X-Company-ID'] = this.selectedCompany;\n      // Load company-specific data\n      this.loadCompanyData();\n    }\n  }),\n  mounted: function mounted() {\n    // If user is logged in but no companies loaded, try to load them\n    if (this.isLoggedIn && (!this.companies || this.companies.length === 0)) {\n      this.$store.dispatch('loadCompanies');\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","axios","computed","_objectSpread","companies","_this$$store$state$us","$store","state","user","selectedCompany","get","id","set","value","commit","methods","updateCompany","defaults","headers","common","loadCompanyData","mounted","isLoggedIn","length","dispatch"],"sources":["C:\\Users\\DLloy\\OneDrive\\Desktop\\Data_Centers\\Lifeline Accounting Software\\Accounting-Version-1\\lifeline_accounting\\frontend\\src\\components\\CompanySelector.vue"],"sourcesContent":["<template>\r\n  <select\r\n    v-if=\"companies && companies.length\"\r\n    class=\"form-select\"\r\n    v-model=\"selectedCompany\"\r\n    @change=\"updateCompany\"\r\n  >\r\n    <!-- Placeholder when no company selected -->\r\n    <option disabled value=\"\">Select Company</option>\r\n    <option\r\n      v-for=\"company in companies\"\r\n      :value=\"company.company_id\"\r\n      :key=\"company.company_id\"\r\n    >\r\n      {{ company.company_name }}\r\n    </option>\r\n  </select>\r\n  <!-- Show loading placeholder if companies not yet loaded -->\r\n  <div v-else-if=\"isLoggedIn\">Loading companies...</div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapGetters(['isLoggedIn']),\r\n    companies() {\r\n      return this.$store.state.user?.companies || [];\r\n    },\r\n    selectedCompany: {\r\n      get() {\r\n        return this.$store.state.selectedCompany.id;\r\n      },\r\n      set(value) {\r\n        this.$store.commit('setSelectedCompany', value);\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(['loadCompanyData']),\r\n    updateCompany() {\r\n      // Set the company ID header for API requests\r\n      axios.defaults.headers.common['X-Company-ID'] = this.selectedCompany;\r\n      // Load company-specific data\r\n      this.loadCompanyData();\r\n    },\r\n  },\r\n  mounted() {\r\n    // If user is logged in but no companies loaded, try to load them\r\n    if (this.isLoggedIn && (!this.companies || this.companies.length === 0)) {\r\n      this.$store.dispatch('loadCompanies');\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";AAsBA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,QAAQ,EAAAC,aAAA,CAAAA,aAAA,KACHJ,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7BK,SAAS,WAATA,SAASA,CAAA,EAAG;MAAA,IAAAC,qBAAA;MACV,OAAO,EAAAA,qBAAA,OAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,cAAAH,qBAAA,uBAAtBA,qBAAA,CAAwBD,SAAQ,KAAK,EAAE;IAChD,CAAC;IACDK,eAAe,EAAE;MACfC,GAAG,WAAHA,GAAGA,CAAA,EAAG;QACJ,OAAO,IAAI,CAACJ,MAAM,CAACC,KAAK,CAACE,eAAe,CAACE,EAAE;MAC7C,CAAC;MACDC,GAAG,WAAHA,GAAGA,CAACC,KAAK,EAAE;QACT,IAAI,CAACP,MAAM,CAACQ,MAAM,CAAC,oBAAoB,EAAED,KAAK,CAAC;MACjD;IACF;EAAC,EACF;EACDE,OAAO,EAAAZ,aAAA,CAAAA,aAAA,KACFH,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC;IAClCgB,aAAa,WAAbA,aAAaA,CAAA,EAAG;MACd;MACAf,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,IAAI,IAAI,CAACV,eAAe;MACpE;MACA,IAAI,CAACW,eAAe,CAAC,CAAC;IACxB;EAAC,EACF;EACDC,OAAO,WAAPA,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,IAAI,CAACC,UAAS,KAAM,CAAC,IAAI,CAAClB,SAAQ,IAAK,IAAI,CAACA,SAAS,CAACmB,MAAK,KAAM,CAAC,CAAC,EAAE;MACvE,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,eAAe,CAAC;IACvC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}