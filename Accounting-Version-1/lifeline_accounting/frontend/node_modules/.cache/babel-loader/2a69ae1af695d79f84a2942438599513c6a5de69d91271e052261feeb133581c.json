{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nvar _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    \"class\": \"form-select\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $options.selectedCompany = $event;\n    }),\n    onChange: _cache[1] || (_cache[1] = function () {\n      return $options.updateCompany && $options.updateCompany.apply($options, arguments);\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.companies, function (company) {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: company.id,\n      key: company.id\n    }, _toDisplayString(company.name), 9 /* TEXT, PROPS */, _hoisted_1);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */)), [[_vModelSelect, $options.selectedCompany]]);\n}","map":{"version":3,"names":["_createElementBlock","$options","selectedCompany","$event","onChange","_cache","updateCompany","apply","arguments","_Fragment","_renderList","companies","company","value","id","key","name","_hoisted_1"],"sources":["C:\\Users\\ds3297l\\Desktop\\Accountint Software\\Design 2\\lifeline_accounting\\frontend\\src\\components\\CompanySelector.vue"],"sourcesContent":["<template>\r\n  <select class=\"form-select\" v-model=\"selectedCompany\" @change=\"updateCompany\">\r\n    <option v-for=\"company in companies\" :value=\"company.id\" :key=\"company.id\">\r\n      {{ company.name }}\r\n    </option>\r\n  </select>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  computed: {\r\n    companies() {\r\n      return this.$store.state.user.companies;\r\n    },\r\n    selectedCompany: {\r\n      get() {\r\n        return this.$store.state.selectedCompany.id;\r\n      },\r\n      set(value) {\r\n        this.$store.commit('setSelectedCompany', value);\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    updateCompany() {\r\n      axios.defaults.headers.common['X-Company-ID'] = this.selectedCompany;\r\n      this.$store.dispatch('loadCompanyData');\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;wCACEA,mBAAA,CAIS;IAJD,SAAM,aAAa;;aAAUC,QAAA,CAAAC,eAAe,GAAAC,MAAA;IAAA;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEJ,QAAA,CAAAK,aAAA,IAAAL,QAAA,CAAAK,aAAA,CAAAC,KAAA,CAAAN,QAAA,EAAAO,SAAA,CAAa;IAAA;yBAC1ER,mBAAA,CAESS,SAAA,QAAAC,WAAA,CAFiBT,QAAA,CAAAU,SAAS,YAApBC,OAAO;yBAAtBZ,mBAAA,CAES;MAF6Ba,KAAK,EAAED,OAAO,CAACE,EAAE;MAAGC,GAAG,EAAEH,OAAO,CAACE;wBAClEF,OAAO,CAACI,IAAI,wBAAAC,UAAA;4FAFkBhB,QAAA,CAAAC,eAAe,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}