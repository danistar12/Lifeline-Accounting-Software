{"ast":null,"code":"import _regenerator from \"C:/Users/ds3297l/Desktop/Accountint Software/Design 2/lifeline_accounting/frontend/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/ds3297l/Desktop/Accountint Software/Design 2/lifeline_accounting/frontend/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios';\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\naxios.defaults.withCredentials = true;\nexport default createStore({\n  state: {\n    user: null,\n    loading: false,\n    error: null,\n    selectedCompany: {\n      id: localStorage.getItem('selectedCompanyId') || null\n    }\n  },\n  mutations: {\n    setUser: function setUser(state, user) {\n      state.user = user;\n    },\n    setLoading: function setLoading(state, loading) {\n      state.loading = loading;\n    },\n    setError: function setError(state, error) {\n      state.error = error;\n    },\n    setToken: function setToken(state, token) {\n      // This mutation is no longer needed for auth, but can be kept if used elsewhere.\n    },\n    setUserCompanies: function setUserCompanies(state, companies) {\n      if (state.user) {\n        state.user.companies = companies;\n      }\n    },\n    setSelectedCompany: function setSelectedCompany(state, companyId) {\n      state.selectedCompany.id = companyId;\n      localStorage.setItem('selectedCompanyId', companyId);\n    },\n    clearAuthData: function clearAuthData(state) {\n      state.user = null;\n      state.selectedCompany.id = null;\n      localStorage.removeItem('selectedCompanyId');\n      state.error = null;\n    }\n  },\n  actions: {\n    login: function login(_ref, authData) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var commit, dispatch, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              commit = _ref.commit, dispatch = _ref.dispatch;\n              commit('setLoading', true);\n              commit('setError', null);\n              _context.p = 1;\n              _context.n = 2;\n              return axios.get('/api/accounts/auth/csrf/');\n            case 2:\n              _context.n = 3;\n              return axios.post('/api/accounts/auth/login/', authData);\n            case 3:\n              _context.n = 4;\n              return dispatch('me');\n            case 4:\n              commit('setLoading', false);\n              _context.n = 6;\n              break;\n            case 5:\n              _context.p = 5;\n              _t = _context.v;\n              commit('setLoading', false);\n              if (_t.response && _t.response.data) {\n                commit('setError', _t.response.data.detail || 'Login failed.');\n              } else {\n                commit('setError', 'An unknown error occurred.');\n              }\n              throw _t;\n            case 6:\n              return _context.a(2);\n          }\n        }, _callee, null, [[1, 5]]);\n      }))();\n    },\n    me: function me(_ref2) {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var commit, response, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.p = 1;\n              _context2.n = 2;\n              return axios.get('/api/accounts/auth/user/');\n            case 2:\n              response = _context2.v;\n              commit('setUser', response.data);\n              return _context2.a(2, response.data);\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              commit('clearAuthData');\n              throw _t2;\n            case 4:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[1, 3]]);\n      }))();\n    },\n    logout: function logout(_ref3) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        axios.post('/api/accounts/auth/logout/').then(function () {\n          commit('clearAuthData');\n          resolve();\n        })[\"catch\"](function (error) {\n          reject(error);\n        });\n      });\n    },\n    loadCompanyData: function loadCompanyData(_ref4) {\n      var state = _ref4.state;\n      // This is a placeholder for where you would load company specific data\n      console.log(\"Loading data for company \".concat(state.selectedCompany.id));\n    }\n  },\n  getters: {\n    isLoggedIn: function isLoggedIn(state) {\n      return !!state.user;\n    },\n    selectedCompanyId: function selectedCompanyId(state) {\n      return state.selectedCompany.id;\n    }\n  }\n});","map":{"version":3,"names":["createStore","axios","defaults","xsrfCookieName","xsrfHeaderName","withCredentials","state","user","loading","error","selectedCompany","id","localStorage","getItem","mutations","setUser","setLoading","setError","setToken","token","setUserCompanies","companies","setSelectedCompany","companyId","setItem","clearAuthData","removeItem","actions","login","_ref","authData","_asyncToGenerator","_regenerator","m","_callee","commit","dispatch","_t","w","_context","n","p","get","post","v","response","data","detail","a","me","_ref2","_callee2","_t2","_context2","logout","_ref3","Promise","resolve","reject","then","loadCompanyData","_ref4","console","log","concat","getters","isLoggedIn","selectedCompanyId"],"sources":["C:/Users/ds3297l/Desktop/Accountint Software/Design 2/lifeline_accounting/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\nimport axios from 'axios'\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\r\naxios.defaults.withCredentials = true\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: null,\r\n    loading: false,\r\n    error: null,\r\n    selectedCompany: {\r\n      id: localStorage.getItem('selectedCompanyId') || null,\r\n    }\r\n  },\r\n  mutations: {\r\n    setUser(state, user) {\r\n      state.user = user;\r\n    },\r\n    setLoading(state, loading) {\r\n      state.loading = loading;\r\n    },\r\n    setError(state, error) {\r\n      state.error = error;\r\n    },\r\n    setToken(state, token) {\r\n      // This mutation is no longer needed for auth, but can be kept if used elsewhere.\r\n    },\r\n    setUserCompanies(state, companies) {\r\n      if (state.user) {\r\n        state.user.companies = companies;\r\n      }\r\n    },\r\n    setSelectedCompany(state, companyId) {\r\n      state.selectedCompany.id = companyId;\r\n      localStorage.setItem('selectedCompanyId', companyId);\r\n    },\r\n    clearAuthData(state) {\r\n      state.user = null;\r\n      state.selectedCompany.id = null;\r\n      localStorage.removeItem('selectedCompanyId');\r\n      state.error = null;\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit, dispatch }, authData) {\r\n      commit('setLoading', true);\r\n      commit('setError', null);\r\n      try {\r\n        await axios.get('/api/accounts/auth/csrf/');\r\n        await axios.post('/api/accounts/auth/login/', authData);\r\n        await dispatch('me');\r\n        commit('setLoading', false);\r\n      } catch (error) {\r\n        commit('setLoading', false);\r\n        if (error.response && error.response.data) {\r\n            commit('setError', error.response.data.detail || 'Login failed.');\r\n        } else {\r\n            commit('setError', 'An unknown error occurred.');\r\n        }\r\n        throw error;\r\n      }\r\n    },\r\n    async me({ commit }) {\r\n      try {\r\n        const response = await axios.get('/api/accounts/auth/user/');\r\n        commit('setUser', response.data);\r\n        return response.data;\r\n      } catch (error) {\r\n        commit('clearAuthData');\r\n        throw error;\r\n      }\r\n    },\r\n    logout({ commit }) {\r\n      return new Promise((resolve, reject) => {\r\n        axios.post('/api/accounts/auth/logout/')\r\n          .then(() => {\r\n            commit('clearAuthData');\r\n            resolve();\r\n          })\r\n          .catch(error => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n    loadCompanyData({ state }) {\r\n        // This is a placeholder for where you would load company specific data\r\n        console.log(`Loading data for company ${state.selectedCompany.id}`);\r\n    }\r\n  },\r\n  getters: {\r\n    isLoggedIn: state => !!state.user,\r\n    selectedCompanyId: state => state.selectedCompany.id\r\n  }\r\n})\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}