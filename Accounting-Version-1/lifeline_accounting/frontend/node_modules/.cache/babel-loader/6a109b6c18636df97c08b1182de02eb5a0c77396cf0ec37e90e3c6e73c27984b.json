{"ast":null,"code":"import _regenerator from \"C:/Users/DLloy/OneDrive/Desktop/Data_Centers/Lifeline Accounting Software/Accounting-Version-1/lifeline_accounting/frontend/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"C:/Users/DLloy/OneDrive/Desktop/Data_Centers/Lifeline Accounting Software/Accounting-Version-1/lifeline_accounting/frontend/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/DLloy/OneDrive/Desktop/Data_Centers/Lifeline Accounting Software/Accounting-Version-1/lifeline_accounting/frontend/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { mapGetters, mapActions } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'CompaniesView',\n  data: function data() {\n    return {\n      companies: [],\n      loading: true,\n      selectedCompany: null,\n      selectedCompanyId: null,\n      activeCompany: null,\n      showAddCompanyModal: false,\n      showEditModal: false,\n      companyStats: {},\n      error: null,\n      editLoading: false,\n      addLoading: false,\n      editForm: {\n        company_id: null,\n        company_name: '',\n        company_notes: ''\n      },\n      addForm: {\n        company_name: '',\n        company_notes: '',\n        role: 'Admin'\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['isLoggedIn'])),\n  methods: _objectSpread(_objectSpread({}, mapActions(['loadCompanies', 'setSelectedCompany'])), {}, {\n    loadCompaniesData: function loadCompaniesData() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var response, savedCompanyId, savedCompany, _error$response, _error$response2, _error$response3, _error$response4, _error$response5, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _this.loading = true;\n              _context.p = 1;\n              console.log('Loading companies...');\n              console.log('User logged in:', _this.isLoggedIn);\n              console.log('Axios default headers:', axios.defaults.headers.common);\n              _context.n = 2;\n              return axios.get('/api/accounts/companies/');\n            case 2:\n              response = _context.v;\n              _this.companies = response.data;\n              console.log('Companies loaded successfully:', _this.companies);\n\n              // Load active company from localStorage\n              savedCompanyId = localStorage.getItem('selectedCompanyId');\n              if (savedCompanyId) {\n                savedCompany = _this.companies.find(function (c) {\n                  return c.company_id == savedCompanyId;\n                });\n                if (savedCompany) {\n                  _this.activeCompany = savedCompany;\n                  console.log('Restored active company:', savedCompany);\n                }\n              }\n              _context.n = 4;\n              break;\n            case 3:\n              _context.p = 3;\n              _t = _context.v;\n              console.error('Failed to load companies:', _t);\n              console.error('Error status:', (_error$response = _t.response) === null || _error$response === void 0 ? void 0 : _error$response.status);\n              console.error('Error data:', (_error$response2 = _t.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n              console.error('Error headers:', (_error$response3 = _t.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.headers);\n\n              // If it's an authentication error, try to re-authenticate\n              if (((_error$response4 = _t.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n                console.log('Authentication error, redirecting to login');\n                _this.error = 'Authentication required. Please log in again.';\n                _this.$router.push('/login');\n              } else {\n                _this.error = \"Failed to load companies: \".concat(((_error$response5 = _t.response) === null || _error$response5 === void 0 || (_error$response5 = _error$response5.data) === null || _error$response5 === void 0 ? void 0 : _error$response5.detail) || _t.message);\n              }\n            case 4:\n              _context.p = 4;\n              _this.loading = false;\n              return _context.f(4);\n            case 5:\n              return _context.a(2);\n          }\n        }, _callee, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    selectCompany: function selectCompany(company) {\n      this.selectedCompany = company;\n      this.selectedCompanyId = company.company_id;\n      this.loadCompanyStats(company);\n    },\n    loadCompanyStats: function loadCompanyStats(company) {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              // Mock stats for now - you can implement real API calls later\n              _this2.companyStats = {\n                totalUsers: Math.floor(Math.random() * 50) + 1,\n                totalTransactions: Math.floor(Math.random() * 1000) + 100,\n                totalRevenue: (Math.random() * 100000).toFixed(2)\n              };\n            case 1:\n              return _context2.a(2);\n          }\n        }, _callee2);\n      }))();\n    },\n    setActiveCompany: function setActiveCompany(company) {\n      this.activeCompany = company;\n      localStorage.setItem('selectedCompanyId', company.company_id);\n\n      // Set axios header for API requests\n      axios.defaults.headers.common['X-Company-ID'] = company.company_id;\n\n      // Update store\n      this.setSelectedCompany(company.company_id);\n\n      // Show success message\n      this.$notify({\n        type: 'success',\n        title: 'Company Selected',\n        message: \"\".concat(company.company_name, \" is now your active company\")\n      });\n    },\n    clearActiveCompany: function clearActiveCompany() {\n      this.activeCompany = null;\n      localStorage.removeItem('selectedCompanyId');\n      delete axios.defaults.headers.common['X-Company-ID'];\n      this.setSelectedCompany(null);\n    },\n    closeDetailsPanel: function closeDetailsPanel() {\n      this.selectedCompany = null;\n      this.selectedCompanyId = null;\n    },\n    editCompany: function editCompany(company) {\n      // Populate edit form and show modal\n      this.editForm = {\n        company_id: company.company_id,\n        company_name: company.company_name,\n        company_notes: company.company_notes || ''\n      };\n      this.showEditModal = true;\n    },\n    closeEditModal: function closeEditModal() {\n      this.showEditModal = false;\n      this.editForm = {\n        company_id: null,\n        company_name: '',\n        company_notes: ''\n      };\n    },\n    closeAddModal: function closeAddModal() {\n      this.showAddCompanyModal = false;\n      this.addForm = {\n        company_name: '',\n        company_notes: '',\n        role: 'Admin'\n      };\n    },\n    saveCompanyEdit: function saveCompanyEdit() {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var response, index, _t2;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _this3.editLoading = true;\n              _context3.p = 1;\n              _context3.n = 2;\n              return axios.put(\"/api/accounts/companies/\".concat(_this3.editForm.company_id, \"/\"), {\n                company_name: _this3.editForm.company_name,\n                company_notes: _this3.editForm.company_notes\n              });\n            case 2:\n              response = _context3.v;\n              // Update the company in the local array\n              index = _this3.companies.findIndex(function (c) {\n                return c.company_id === _this3.editForm.company_id;\n              });\n              if (index !== -1) {\n                _this3.companies[index] = response.data;\n              }\n\n              // Update selected company if it's the one being edited\n              if (_this3.selectedCompany && _this3.selectedCompany.company_id === _this3.editForm.company_id) {\n                _this3.selectedCompany = response.data;\n              }\n              _this3.closeEditModal();\n              console.log('Company updated successfully');\n              _context3.n = 4;\n              break;\n            case 3:\n              _context3.p = 3;\n              _t2 = _context3.v;\n              console.error('Failed to update company:', _t2);\n              alert('Failed to update company. Please try again.');\n            case 4:\n              _context3.p = 4;\n              _this3.editLoading = false;\n              return _context3.f(4);\n            case 5:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[1, 3, 4, 5]]);\n      }))();\n    },\n    saveNewCompany: function saveNewCompany() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var response, _t3;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              _this4.addLoading = true;\n              _context4.p = 1;\n              _context4.n = 2;\n              return axios.post('/api/accounts/companies/', {\n                company_name: _this4.addForm.company_name,\n                company_notes: _this4.addForm.company_notes\n              });\n            case 2:\n              response = _context4.v;\n              // Add the new company to the list\n              _this4.companies.push(response.data);\n\n              // Create user-company role\n              _context4.n = 3;\n              return axios.post('/api/accounts/user-company-roles/', {\n                company: response.data.company_id,\n                role: _this4.addForm.role\n              });\n            case 3:\n              _this4.closeAddModal();\n              console.log('Company created successfully');\n              _context4.n = 5;\n              break;\n            case 4:\n              _context4.p = 4;\n              _t3 = _context4.v;\n              console.error('Failed to create company:', _t3);\n              alert('Failed to create company. Please try again.');\n            case 5:\n              _context4.p = 5;\n              _this4.addLoading = false;\n              return _context4.f(5);\n            case 6:\n              return _context4.a(2);\n          }\n        }, _callee4, null, [[1, 4, 5, 6]]);\n      }))();\n    },\n    viewCompanyDetails: function viewCompanyDetails(company) {\n      this.selectCompany(company);\n    },\n    viewReports: function viewReports(company) {\n      // Navigate to reports for this company\n      this.$router.push({\n        path: '/reports/balance-sheet',\n        query: {\n          company: company.company_id\n        }\n      });\n    },\n    getCompanyInitials: function getCompanyInitials(name) {\n      return name.split(' ').map(function (word) {\n        return word.charAt(0);\n      }).join('').toUpperCase().substring(0, 2);\n    },\n    formatAddress: function formatAddress(company) {\n      var parts = [company.address, company.city, company.state, company.zip_code];\n      return parts.filter(function (part) {\n        return part;\n      }).join(', ') || 'No address provided';\n    }\n  }),\n  mounted: function mounted() {\n    var _this5 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n      return _regenerator().w(function (_context5) {\n        while (1) switch (_context5.n) {\n          case 0:\n            if (!_this5.isLoggedIn) {\n              _context5.n = 1;\n              break;\n            }\n            _context5.n = 1;\n            return _this5.loadCompaniesData();\n          case 1:\n            return _context5.a(2);\n        }\n      }, _callee5);\n    }))();\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","axios","name","data","companies","loading","selectedCompany","selectedCompanyId","activeCompany","showAddCompanyModal","showEditModal","companyStats","error","editLoading","addLoading","editForm","company_id","company_name","company_notes","addForm","role","computed","_objectSpread","methods","loadCompaniesData","_this","_asyncToGenerator","_regenerator","m","_callee","response","savedCompanyId","savedCompany","_error$response","_error$response2","_error$response3","_error$response4","_error$response5","_t","w","_context","n","p","console","log","isLoggedIn","defaults","headers","common","get","v","localStorage","getItem","find","c","status","$router","push","concat","detail","message","f","a","selectCompany","company","loadCompanyStats","_this2","_callee2","_context2","totalUsers","Math","floor","random","totalTransactions","totalRevenue","toFixed","setActiveCompany","setItem","setSelectedCompany","$notify","type","title","clearActiveCompany","removeItem","closeDetailsPanel","editCompany","closeEditModal","closeAddModal","saveCompanyEdit","_this3","_callee3","index","_t2","_context3","put","findIndex","alert","saveNewCompany","_this4","_callee4","_t3","_context4","post","viewCompanyDetails","viewReports","path","query","getCompanyInitials","split","map","word","charAt","join","toUpperCase","substring","formatAddress","parts","address","city","state","zip_code","filter","part","mounted","_this5","_callee5","_context5"],"sources":["C:\\Users\\DLloy\\OneDrive\\Desktop\\Data_Centers\\Lifeline Accounting Software\\Accounting-Version-1\\lifeline_accounting\\frontend\\src\\views\\accounts\\Companies.vue"],"sourcesContent":["<template>\r\n  <div class=\"companies-container\">\r\n    <!-- Header Section -->\r\n    <div class=\"page-header\">\r\n      <div class=\"header-content\">\r\n        <h1 class=\"page-title\">\r\n          <i class=\"icon-building\"></i>\r\n          Company Management\r\n        </h1>\r\n        <p class=\"page-subtitle\">Select and manage your companies</p>\r\n      </div>\r\n      <div class=\"header-actions\">\r\n        <button class=\"btn btn-outline\" @click=\"loadCompaniesData\">\r\n          <i class=\"icon-refresh\"></i>\r\n          Refresh\r\n        </button>\r\n        <button class=\"btn btn-primary\" @click=\"showAddCompanyModal = true\">\r\n          <i class=\"icon-plus\"></i>\r\n          Add Company\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading State -->\r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <div class=\"spinner\"></div>\r\n      <p>Loading companies...</p>\r\n    </div>\r\n\r\n    <!-- Error State -->\r\n    <div v-else-if=\"error\" class=\"error-container\">\r\n      <div class=\"error-icon\">⚠️</div>\r\n      <h3>Error Loading Companies</h3>\r\n      <p>{{ error }}</p>\r\n      <div class=\"error-actions\">\r\n        <button class=\"btn btn-primary\" @click=\"loadCompaniesData\">\r\n          <i class=\"icon-refresh\"></i>\r\n          Try Again\r\n        </button>\r\n        <button class=\"btn btn-outline\" @click=\"$router.push('/login')\">\r\n          <i class=\"icon-login\"></i>\r\n          Go to Login\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Companies Grid -->\r\n    <div v-else-if=\"!error && companies.length > 0\" class=\"companies-grid\">\r\n      <div \r\n        v-for=\"company in companies\" \r\n        :key=\"company.company_id\"\r\n        class=\"company-card\"\r\n        :class=\"{ 'selected': selectedCompanyId === company.company_id }\"\r\n        @click=\"selectCompany(company)\"\r\n      >\r\n        <div class=\"company-card-header\">\r\n          <div class=\"company-avatar\">\r\n            {{ getCompanyInitials(company.company_name) }}\r\n          </div>\r\n          <div class=\"company-basic-info\">\r\n            <h3 class=\"company-name\">{{ company.company_name }}</h3>\r\n            <p class=\"company-location\">{{ company.city }}, {{ company.state }}</p>\r\n          </div>\r\n          <div class=\"company-status\">\r\n            <span class=\"status-badge active\">Active</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"company-card-body\">\r\n          <div class=\"company-details\">\r\n            <div class=\"detail-item\">\r\n              <i class=\"icon-mail\"></i>\r\n              <span>{{ company.email || 'No email provided' }}</span>\r\n            </div>\r\n            <div class=\"detail-item\">\r\n              <i class=\"icon-phone\"></i>\r\n              <span>{{ company.phone || 'No phone provided' }}</span>\r\n            </div>\r\n            <div class=\"detail-item\">\r\n              <i class=\"icon-location\"></i>\r\n              <span>{{ formatAddress(company) }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"company-card-footer\">\r\n          <button class=\"btn btn-outline\" @click.stop=\"editCompany(company)\">\r\n            <i class=\"icon-edit\"></i>\r\n            Edit\r\n          </button>\r\n          <button class=\"btn btn-primary\" @click.stop=\"viewCompanyDetails(company)\">\r\n            <i class=\"icon-eye\"></i>\r\n            View Details\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Empty State -->\r\n    <div v-else-if=\"!error && !loading\" class=\"empty-state\">\r\n      <div class=\"empty-icon\">\r\n        <i class=\"icon-building\"></i>\r\n      </div>\r\n      <h3>No Companies Found</h3>\r\n      <p>You don't have access to any companies yet. Contact your administrator or add a new company.</p>\r\n      <button class=\"btn btn-primary\" @click=\"showAddCompanyModal = true\">\r\n        <i class=\"icon-plus\"></i>\r\n        Add Your First Company\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Selected Company Details Panel -->\r\n    <div v-if=\"selectedCompany\" class=\"company-details-panel\">\r\n      <div class=\"panel-header\">\r\n        <h2>{{ selectedCompany.company_name }} - Details</h2>\r\n        <button class=\"btn btn-ghost\" @click=\"closeDetailsPanel\">\r\n          <i class=\"icon-close\"></i>\r\n        </button>\r\n      </div>\r\n      \r\n      <div class=\"panel-content\">\r\n        <div class=\"details-grid\">\r\n          <!-- Company Information -->\r\n          <div class=\"detail-section\">\r\n            <h4>Company Information</h4>\r\n            <div class=\"detail-group\">\r\n              <div class=\"detail-row\">\r\n                <label>Company Name:</label>\r\n                <span>{{ selectedCompany.company_name }}</span>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <label>Contact Person:</label>\r\n                <span>{{ selectedCompany.contact_person || 'Not provided' }}</span>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <label>Email:</label>\r\n                <span>{{ selectedCompany.email || 'Not provided' }}</span>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <label>Phone:</label>\r\n                <span>{{ selectedCompany.phone || 'Not provided' }}</span>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <label>Website:</label>\r\n                <span v-if=\"selectedCompany.website\">\r\n                  <a :href=\"selectedCompany.website\" target=\"_blank\" class=\"link\">{{ selectedCompany.website }}</a>\r\n                </span>\r\n                <span v-else>Not provided</span>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <label>Tax ID:</label>\r\n                <span>{{ selectedCompany.tax_id || 'Not provided' }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Address Information -->\r\n          <div class=\"detail-section\">\r\n            <h4>Address</h4>\r\n            <div class=\"detail-group\">\r\n              <div class=\"detail-row\">\r\n                <label>Street Address:</label>\r\n                <span>{{ selectedCompany.address || 'Not provided' }}</span>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <label>City:</label>\r\n                <span>{{ selectedCompany.city || 'Not provided' }}</span>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <label>State:</label>\r\n                <span>{{ selectedCompany.state || 'Not provided' }}</span>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <label>ZIP Code:</label>\r\n                <span>{{ selectedCompany.zip_code || 'Not provided' }}</span>\r\n              </div>\r\n              <div class=\"detail-row\">\r\n                <label>Country:</label>\r\n                <span>{{ selectedCompany.country || 'United States' }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Quick Stats -->\r\n          <div class=\"detail-section\">\r\n            <h4>Quick Stats</h4>\r\n            <div class=\"stats-grid\">\r\n              <div class=\"stat-card\">\r\n                <div class=\"stat-value\">{{ companyStats.totalUsers || 0 }}</div>\r\n                <div class=\"stat-label\">Users</div>\r\n              </div>\r\n              <div class=\"stat-card\">\r\n                <div class=\"stat-value\">{{ companyStats.totalTransactions || 0 }}</div>\r\n                <div class=\"stat-label\">Transactions</div>\r\n              </div>\r\n              <div class=\"stat-card\">\r\n                <div class=\"stat-value\">${{ companyStats.totalRevenue || '0.00' }}</div>\r\n                <div class=\"stat-label\">Revenue</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Action Buttons -->\r\n          <div class=\"detail-section\">\r\n            <h4>Actions</h4>\r\n            <div class=\"action-buttons\">\r\n              <button class=\"btn btn-primary\" @click=\"setActiveCompany(selectedCompany)\">\r\n                <i class=\"icon-check\"></i>\r\n                Set as Active Company\r\n              </button>\r\n              <button class=\"btn btn-outline\" @click=\"editCompany(selectedCompany)\">\r\n                <i class=\"icon-edit\"></i>\r\n                Edit Company\r\n              </button>\r\n              <button class=\"btn btn-outline\" @click=\"viewReports(selectedCompany)\">\r\n                <i class=\"icon-chart\"></i>\r\n                View Reports\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Current Active Company Banner -->\r\n    <div v-if=\"activeCompany\" class=\"active-company-banner\">\r\n      <div class=\"banner-content\">\r\n        <i class=\"icon-check-circle\"></i>\r\n        <span>Currently working in: <strong>{{ activeCompany.company_name }}</strong></span>\r\n      </div>\r\n      <button class=\"btn btn-ghost btn-sm\" @click=\"clearActiveCompany\">\r\n        Change Company\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Edit Company Modal -->\r\n    <div v-if=\"showEditModal\" class=\"modal-overlay\" @click=\"closeEditModal\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <div class=\"modal-header\">\r\n          <h3>Edit Company</h3>\r\n          <button class=\"modal-close\" @click=\"closeEditModal\">&times;</button>\r\n        </div>\r\n        \r\n        <form @submit.prevent=\"saveCompanyEdit\" class=\"modal-body\">\r\n          <!-- Basic Information -->\r\n          <div class=\"form-section\">\r\n            <h4>Basic Information</h4>\r\n            <div class=\"form-group\">\r\n              <label for=\"editCompanyName\">Company Name *</label>\r\n              <input \r\n                id=\"editCompanyName\"\r\n                v-model=\"editForm.company_name\" \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                required\r\n                placeholder=\"Enter company name\"\r\n              >\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"editCompanyNotes\">Company Notes</label>\r\n              <textarea \r\n                id=\"editCompanyNotes\"\r\n                v-model=\"editForm.company_notes\" \r\n                class=\"form-control\" \r\n                rows=\"3\"\r\n                placeholder=\"Optional notes about the company\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Contact Information -->\r\n          <div class=\"form-section\">\r\n            <h4>Contact Information</h4>\r\n            <div class=\"form-row\">\r\n              <div class=\"form-group\">\r\n                <label for=\"editContactPerson\">Contact Person</label>\r\n                <input \r\n                  id=\"editContactPerson\"\r\n                  v-model=\"editForm.contact_person\" \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"Primary contact name\"\r\n                >\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"editEmail\">Email</label>\r\n                <input \r\n                  id=\"editEmail\"\r\n                  v-model=\"editForm.email\" \r\n                  type=\"email\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"company@example.com\"\r\n                >\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"form-row\">\r\n              <div class=\"form-group\">\r\n                <label for=\"editPhone\">Phone</label>\r\n                <input \r\n                  id=\"editPhone\"\r\n                  v-model=\"editForm.phone\" \r\n                  type=\"tel\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"(555) 123-4567\"\r\n                >\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"editWebsite\">Website</label>\r\n                <input \r\n                  id=\"editWebsite\"\r\n                  v-model=\"editForm.website\" \r\n                  type=\"url\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"https://www.company.com\"\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Address Information -->\r\n          <div class=\"form-section\">\r\n            <h4>Address Information</h4>\r\n            <div class=\"form-group\">\r\n              <label for=\"editAddress\">Street Address</label>\r\n              <input \r\n                id=\"editAddress\"\r\n                v-model=\"editForm.address\" \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                placeholder=\"123 Main Street\"\r\n              >\r\n            </div>\r\n            \r\n            <div class=\"form-row\">\r\n              <div class=\"form-group\">\r\n                <label for=\"editCity\">City</label>\r\n                <input \r\n                  id=\"editCity\"\r\n                  v-model=\"editForm.city\" \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"City\"\r\n                >\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"editState\">State</label>\r\n                <input \r\n                  id=\"editState\"\r\n                  v-model=\"editForm.state\" \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"State\"\r\n                >\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"editZipCode\">ZIP Code</label>\r\n                <input \r\n                  id=\"editZipCode\"\r\n                  v-model=\"editForm.zip_code\" \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"12345\"\r\n                >\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"editCountry\">Country</label>\r\n              <input \r\n                id=\"editCountry\"\r\n                v-model=\"editForm.country\" \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                placeholder=\"United States\"\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Business Information -->\r\n          <div class=\"form-section\">\r\n            <h4>Business Information</h4>\r\n            <div class=\"form-group\">\r\n              <label for=\"editTaxId\">Tax ID / EIN</label>\r\n              <input \r\n                id=\"editTaxId\"\r\n                v-model=\"editForm.tax_id\" \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                placeholder=\"12-3456789\"\r\n              >\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"form-actions\">\r\n            <button type=\"button\" class=\"btn btn-outline\" @click=\"closeEditModal\">\r\n              Cancel\r\n            </button>\r\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"editLoading\">\r\n              <span v-if=\"editLoading\">Saving...</span>\r\n              <span v-else>Save Changes</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Company Modal -->\r\n    <div v-if=\"showAddCompanyModal\" class=\"modal-overlay\" @click=\"closeAddModal\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <div class=\"modal-header\">\r\n          <h3>Add New Company</h3>\r\n          <button class=\"modal-close\" @click=\"closeAddModal\">&times;</button>\r\n        </div>\r\n        \r\n        <form @submit.prevent=\"saveNewCompany\" class=\"modal-body\">\r\n          <!-- Basic Information -->\r\n          <div class=\"form-section\">\r\n            <h4>Basic Information</h4>\r\n            <div class=\"form-group\">\r\n              <label for=\"newCompanyName\">Company Name *</label>\r\n              <input \r\n                id=\"newCompanyName\"\r\n                v-model=\"addForm.company_name\" \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                required\r\n                placeholder=\"Enter company name\"\r\n              >\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"newCompanyNotes\">Company Notes</label>\r\n              <textarea \r\n                id=\"newCompanyNotes\"\r\n                v-model=\"addForm.company_notes\" \r\n                class=\"form-control\" \r\n                rows=\"3\"\r\n                placeholder=\"Optional notes about the company\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Contact Information -->\r\n          <div class=\"form-section\">\r\n            <h4>Contact Information</h4>\r\n            <div class=\"form-row\">\r\n              <div class=\"form-group\">\r\n                <label for=\"newContactPerson\">Contact Person</label>\r\n                <input \r\n                  id=\"newContactPerson\"\r\n                  v-model=\"addForm.contact_person\" \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"Primary contact name\"\r\n                >\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"newEmail\">Email</label>\r\n                <input \r\n                  id=\"newEmail\"\r\n                  v-model=\"addForm.email\" \r\n                  type=\"email\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"company@example.com\"\r\n                >\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"form-row\">\r\n              <div class=\"form-group\">\r\n                <label for=\"newPhone\">Phone</label>\r\n                <input \r\n                  id=\"newPhone\"\r\n                  v-model=\"addForm.phone\" \r\n                  type=\"tel\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"(555) 123-4567\"\r\n                >\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"newWebsite\">Website</label>\r\n                <input \r\n                  id=\"newWebsite\"\r\n                  v-model=\"addForm.website\" \r\n                  type=\"url\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"https://www.company.com\"\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Address Information -->\r\n          <div class=\"form-section\">\r\n            <h4>Address Information</h4>\r\n            <div class=\"form-group\">\r\n              <label for=\"newAddress\">Street Address</label>\r\n              <input \r\n                id=\"newAddress\"\r\n                v-model=\"addForm.address\" \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                placeholder=\"123 Main Street\"\r\n              >\r\n            </div>\r\n            \r\n            <div class=\"form-row\">\r\n              <div class=\"form-group\">\r\n                <label for=\"newCity\">City</label>\r\n                <input \r\n                  id=\"newCity\"\r\n                  v-model=\"addForm.city\" \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"City\"\r\n                >\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"newState\">State</label>\r\n                <input \r\n                  id=\"newState\"\r\n                  v-model=\"addForm.state\" \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"State\"\r\n                >\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"newZipCode\">ZIP Code</label>\r\n                <input \r\n                  id=\"newZipCode\"\r\n                  v-model=\"addForm.zip_code\" \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"12345\"\r\n                >\r\n              </div>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n              <label for=\"newCountry\">Country</label>\r\n              <input \r\n                id=\"newCountry\"\r\n                v-model=\"addForm.country\" \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                placeholder=\"United States\"\r\n              >\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Business Information -->\r\n          <div class=\"form-section\">\r\n            <h4>Business Information</h4>\r\n            <div class=\"form-row\">\r\n              <div class=\"form-group\">\r\n                <label for=\"newTaxId\">Tax ID / EIN</label>\r\n                <input \r\n                  id=\"newTaxId\"\r\n                  v-model=\"addForm.tax_id\" \r\n                  type=\"text\" \r\n                  class=\"form-control\" \r\n                  placeholder=\"12-3456789\"\r\n                >\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"newUserRole\">Your Role</label>\r\n                <select id=\"newUserRole\" v-model=\"addForm.role\" class=\"form-control\">\r\n                  <option value=\"Admin\">Admin</option>\r\n                  <option value=\"Manager\">Manager</option>\r\n                  <option value=\"Accountant\">Accountant</option>\r\n                  <option value=\"Viewer\">Viewer</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"form-actions\">\r\n            <button type=\"button\" class=\"btn btn-outline\" @click=\"closeAddModal\">\r\n              Cancel\r\n            </button>\r\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"addLoading\">\r\n              <span v-if=\"addLoading\">Creating...</span>\r\n              <span v-else>Create Company</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'CompaniesView',\r\n  data() {\r\n    return {\r\n      companies: [],\r\n      loading: true,\r\n      selectedCompany: null,\r\n      selectedCompanyId: null,\r\n      activeCompany: null,\r\n      showAddCompanyModal: false,\r\n      showEditModal: false,\r\n      companyStats: {},\r\n      error: null,\r\n      editLoading: false,\r\n      addLoading: false,\r\n      editForm: {\r\n        company_id: null,\r\n        company_name: '',\r\n        company_notes: ''\r\n      },\r\n      addForm: {\r\n        company_name: '',\r\n        company_notes: '',\r\n        role: 'Admin'\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isLoggedIn']),\r\n  },\r\n  methods: {\r\n    ...mapActions(['loadCompanies', 'setSelectedCompany']),\r\n    \r\n    async loadCompaniesData() {\r\n      this.loading = true;\r\n      try {\r\n        console.log('Loading companies...');\r\n        console.log('User logged in:', this.isLoggedIn);\r\n        console.log('Axios default headers:', axios.defaults.headers.common);\r\n        \r\n        const response = await axios.get('/api/accounts/companies/');\r\n        this.companies = response.data;\r\n        console.log('Companies loaded successfully:', this.companies);\r\n        \r\n        // Load active company from localStorage\r\n        const savedCompanyId = localStorage.getItem('selectedCompanyId');\r\n        if (savedCompanyId) {\r\n          const savedCompany = this.companies.find(c => c.company_id == savedCompanyId);\r\n          if (savedCompany) {\r\n            this.activeCompany = savedCompany;\r\n            console.log('Restored active company:', savedCompany);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load companies:', error);\r\n        console.error('Error status:', error.response?.status);\r\n        console.error('Error data:', error.response?.data);\r\n        console.error('Error headers:', error.response?.headers);\r\n        \r\n        // If it's an authentication error, try to re-authenticate\r\n        if (error.response?.status === 401) {\r\n          console.log('Authentication error, redirecting to login');\r\n          this.error = 'Authentication required. Please log in again.';\r\n          this.$router.push('/login');\r\n        } else {\r\n          this.error = `Failed to load companies: ${error.response?.data?.detail || error.message}`;\r\n        }\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    selectCompany(company) {\r\n      this.selectedCompany = company;\r\n      this.selectedCompanyId = company.company_id;\r\n      this.loadCompanyStats(company);\r\n    },\r\n\r\n    async loadCompanyStats(company) {\r\n      // Mock stats for now - you can implement real API calls later\r\n      this.companyStats = {\r\n        totalUsers: Math.floor(Math.random() * 50) + 1,\r\n        totalTransactions: Math.floor(Math.random() * 1000) + 100,\r\n        totalRevenue: (Math.random() * 100000).toFixed(2)\r\n      };\r\n    },\r\n\r\n    setActiveCompany(company) {\r\n      this.activeCompany = company;\r\n      localStorage.setItem('selectedCompanyId', company.company_id);\r\n      \r\n      // Set axios header for API requests\r\n      axios.defaults.headers.common['X-Company-ID'] = company.company_id;\r\n      \r\n      // Update store\r\n      this.setSelectedCompany(company.company_id);\r\n      \r\n      // Show success message\r\n      this.$notify({\r\n        type: 'success',\r\n        title: 'Company Selected',\r\n        message: `${company.company_name} is now your active company`\r\n      });\r\n    },\r\n\r\n    clearActiveCompany() {\r\n      this.activeCompany = null;\r\n      localStorage.removeItem('selectedCompanyId');\r\n      delete axios.defaults.headers.common['X-Company-ID'];\r\n      this.setSelectedCompany(null);\r\n    },\r\n\r\n    closeDetailsPanel() {\r\n      this.selectedCompany = null;\r\n      this.selectedCompanyId = null;\r\n    },\r\n\r\n    editCompany(company) {\r\n      // Populate edit form and show modal\r\n      this.editForm = {\r\n        company_id: company.company_id,\r\n        company_name: company.company_name,\r\n        company_notes: company.company_notes || ''\r\n      };\r\n      this.showEditModal = true;\r\n    },\r\n\r\n    closeEditModal() {\r\n      this.showEditModal = false;\r\n      this.editForm = {\r\n        company_id: null,\r\n        company_name: '',\r\n        company_notes: ''\r\n      };\r\n    },\r\n\r\n    closeAddModal() {\r\n      this.showAddCompanyModal = false;\r\n      this.addForm = {\r\n        company_name: '',\r\n        company_notes: '',\r\n        role: 'Admin'\r\n      };\r\n    },\r\n\r\n    async saveCompanyEdit() {\r\n      this.editLoading = true;\r\n      try {\r\n        const response = await axios.put(`/api/accounts/companies/${this.editForm.company_id}/`, {\r\n          company_name: this.editForm.company_name,\r\n          company_notes: this.editForm.company_notes\r\n        });\r\n        \r\n        // Update the company in the local array\r\n        const index = this.companies.findIndex(c => c.company_id === this.editForm.company_id);\r\n        if (index !== -1) {\r\n          this.companies[index] = response.data;\r\n        }\r\n        \r\n        // Update selected company if it's the one being edited\r\n        if (this.selectedCompany && this.selectedCompany.company_id === this.editForm.company_id) {\r\n          this.selectedCompany = response.data;\r\n        }\r\n        \r\n        this.closeEditModal();\r\n        console.log('Company updated successfully');\r\n      } catch (error) {\r\n        console.error('Failed to update company:', error);\r\n        alert('Failed to update company. Please try again.');\r\n      } finally {\r\n        this.editLoading = false;\r\n      }\r\n    },\r\n\r\n    async saveNewCompany() {\r\n      this.addLoading = true;\r\n      try {\r\n        const response = await axios.post('/api/accounts/companies/', {\r\n          company_name: this.addForm.company_name,\r\n          company_notes: this.addForm.company_notes\r\n        });\r\n        \r\n        // Add the new company to the list\r\n        this.companies.push(response.data);\r\n        \r\n        // Create user-company role\r\n        await axios.post('/api/accounts/user-company-roles/', {\r\n          company: response.data.company_id,\r\n          role: this.addForm.role\r\n        });\r\n        \r\n        this.closeAddModal();\r\n        console.log('Company created successfully');\r\n      } catch (error) {\r\n        console.error('Failed to create company:', error);\r\n        alert('Failed to create company. Please try again.');\r\n      } finally {\r\n        this.addLoading = false;\r\n      }\r\n    },\r\n\r\n    viewCompanyDetails(company) {\r\n      this.selectCompany(company);\r\n    },\r\n\r\n    viewReports(company) {\r\n      // Navigate to reports for this company\r\n      this.$router.push({\r\n        path: '/reports/balance-sheet',\r\n        query: { company: company.company_id }\r\n      });\r\n    },\r\n\r\n    getCompanyInitials(name) {\r\n      return name.split(' ')\r\n        .map(word => word.charAt(0))\r\n        .join('')\r\n        .toUpperCase()\r\n        .substring(0, 2);\r\n    },\r\n\r\n    formatAddress(company) {\r\n      const parts = [company.address, company.city, company.state, company.zip_code];\r\n      return parts.filter(part => part).join(', ') || 'No address provided';\r\n    }\r\n  },\r\n\r\n  async mounted() {\r\n    if (this.isLoggedIn) {\r\n      await this.loadCompaniesData();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Container */\r\n.companies-container {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n/* Page Header */\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 2px solid #e9ecef;\r\n}\r\n\r\n.header-content {\r\n  flex: 1;\r\n}\r\n\r\n.page-title {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: #2c3e50;\r\n  margin: 0 0 0.5rem 0;\r\n}\r\n\r\n.page-subtitle {\r\n  color: #6c757d;\r\n  font-size: 1.1rem;\r\n  margin: 0;\r\n}\r\n\r\n.header-actions {\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n\r\n/* Icons */\r\n.icon-building::before { content: '🏢'; }\r\n.icon-plus::before { content: '➕'; }\r\n.icon-refresh::before { content: '🔄'; }\r\n.icon-login::before { content: '🔑'; }\r\n.icon-mail::before { content: '📧'; }\r\n.icon-phone::before { content: '📞'; }\r\n.icon-location::before { content: '📍'; }\r\n.icon-edit::before { content: '✏️'; }\r\n.icon-eye::before { content: '👁️'; }\r\n.icon-close::before { content: '✖️'; }\r\n.icon-check::before { content: '✅'; }\r\n.icon-chart::before { content: '📊'; }\r\n.icon-check-circle::before { content: '✅'; }\r\n\r\n/* Buttons */\r\n.btn {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #0056b3;\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.btn-outline {\r\n  background-color: transparent;\r\n  color: #007bff;\r\n  border: 2px solid #007bff;\r\n}\r\n\r\n.btn-outline:hover {\r\n  background-color: #007bff;\r\n  color: white;\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.btn-ghost {\r\n  background-color: transparent;\r\n  color: #6c757d;\r\n  border: none;\r\n}\r\n\r\n.btn-ghost:hover {\r\n  background-color: #f8f9fa;\r\n  color: #495057;\r\n}\r\n\r\n.btn-sm {\r\n  padding: 0.5rem 1rem;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n/* Loading */\r\n.loading-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 4rem 2rem;\r\n  color: #6c757d;\r\n}\r\n\r\n/* Error State */\r\n.error-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 4rem 2rem;\r\n  color: #6c757d;\r\n  text-align: center;\r\n}\r\n\r\n.error-icon {\r\n  font-size: 4rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.error-container h3 {\r\n  margin: 0 0 0.5rem 0;\r\n  color: #dc3545;\r\n}\r\n\r\n.error-container p {\r\n  margin: 0 0 2rem 0;\r\n  max-width: 500px;\r\n}\r\n\r\n.error-actions {\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid #e9ecef;\r\n  border-top: 4px solid #007bff;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* Companies Grid */\r\n.companies-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\r\n  gap: 1.5rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n/* Company Card */\r\n.company-card {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  border: 2px solid transparent;\r\n}\r\n\r\n.company-card:hover {\r\n  transform: translateY(-4px);\r\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.company-card.selected {\r\n  border-color: #007bff;\r\n  box-shadow: 0 8px 25px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.company-card-header {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1.5rem;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n\r\n.company-avatar {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  background: linear-gradient(135deg, #007bff, #0056b3);\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: bold;\r\n  font-size: 1.1rem;\r\n  margin-right: 1rem;\r\n}\r\n\r\n.company-basic-info {\r\n  flex: 1;\r\n}\r\n\r\n.company-name {\r\n  margin: 0 0 0.25rem 0;\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n}\r\n\r\n.company-location {\r\n  margin: 0;\r\n  color: #6c757d;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.company-status {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.status-badge {\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 20px;\r\n  font-size: 0.8rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.status-badge.active {\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n}\r\n\r\n.company-card-body {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.company-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n}\r\n\r\n.detail-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  font-size: 0.9rem;\r\n  color: #495057;\r\n}\r\n\r\n.company-card-footer {\r\n  display: flex;\r\n  gap: 0.75rem;\r\n  padding: 1rem 1.5rem;\r\n  background-color: #f8f9fa;\r\n  border-top: 1px solid #e9ecef;\r\n}\r\n\r\n.company-card-footer .btn {\r\n  flex: 1;\r\n  justify-content: center;\r\n  padding: 0.5rem 1rem;\r\n}\r\n\r\n/* Empty State */\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 4rem 2rem;\r\n  color: #6c757d;\r\n}\r\n\r\n.empty-icon {\r\n  font-size: 4rem;\r\n  margin-bottom: 1rem;\r\n  opacity: 0.5;\r\n}\r\n\r\n.empty-state h3 {\r\n  margin: 0 0 0.5rem 0;\r\n  color: #495057;\r\n}\r\n\r\n.empty-state p {\r\n  margin: 0 0 2rem 0;\r\n  max-width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n\r\n/* Company Details Panel */\r\n.company-details-panel {\r\n  background: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  margin-top: 2rem;\r\n  overflow: hidden;\r\n}\r\n\r\n.panel-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1.5rem 2rem;\r\n  background-color: #f8f9fa;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n\r\n.panel-header h2 {\r\n  margin: 0;\r\n  color: #2c3e50;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.panel-content {\r\n  padding: 2rem;\r\n}\r\n\r\n.details-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 2rem;\r\n}\r\n\r\n.detail-section {\r\n  background-color: #f8f9fa;\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n}\r\n\r\n.detail-section h4 {\r\n  margin: 0 0 1rem 0;\r\n  color: #2c3e50;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.detail-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n}\r\n\r\n.detail-row {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.5rem 0;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n\r\n.detail-row:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.detail-row label {\r\n  font-weight: 500;\r\n  color: #495057;\r\n}\r\n\r\n.detail-row span {\r\n  color: #2c3e50;\r\n  text-align: right;\r\n}\r\n\r\n/* Stats Grid */\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n  gap: 1rem;\r\n}\r\n\r\n.stat-card {\r\n  text-align: center;\r\n  padding: 1rem;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.stat-value {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  color: #007bff;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 0.9rem;\r\n  color: #6c757d;\r\n}\r\n\r\n/* Action Buttons */\r\n.action-buttons {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n}\r\n\r\n/* Active Company Banner */\r\n.active-company-banner {\r\n  position: fixed;\r\n  bottom: 2rem;\r\n  right: 2rem;\r\n  background: linear-gradient(135deg, #28a745, #20c997);\r\n  color: white;\r\n  padding: 1rem 1.5rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  max-width: 400px;\r\n  z-index: 1000;\r\n}\r\n\r\n.banner-content {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  flex: 1;\r\n}\r\n\r\n/* Responsive */\r\n@media (max-width: 768px) {\r\n  .companies-container {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .page-header {\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  .companies-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .details-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .company-card-footer {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .active-company-banner {\r\n    bottom: 1rem;\r\n    right: 1rem;\r\n    left: 1rem;\r\n    max-width: none;\r\n  }\r\n  \r\n  .action-buttons {\r\n    flex-direction: column;\r\n  }\r\n}\r\n\r\n/* Modal Styles */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\r\n  width: 90%;\r\n  max-width: 500px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1.5rem 1.5rem 1rem;\r\n  border-bottom: 1px solid #e9ecef;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin: 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.modal-close {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n  color: #6c757d;\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.modal-close:hover {\r\n  color: #495057;\r\n}\r\n\r\n.modal-body {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: #2c3e50;\r\n}\r\n\r\n.form-control {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 4px;\r\n  font-size: 0.9rem;\r\n  transition: border-color 0.2s, box-shadow 0.2s;\r\n}\r\n\r\n.form-control:focus {\r\n  outline: none;\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.form-control textarea {\r\n  resize: vertical;\r\n  min-height: 100px;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: flex-end;\r\n  margin-top: 2rem;\r\n  padding-top: 1rem;\r\n  border-top: 1px solid #e9ecef;\r\n}\r\n\r\n/* Mobile responsiveness for modals */\r\n@media (max-width: 768px) {\r\n  .modal-content {\r\n    width: 95%;\r\n    margin: 1rem;\r\n  }\r\n  \r\n  .modal-header,\r\n  .modal-body {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .form-actions {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .form-actions .btn {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}