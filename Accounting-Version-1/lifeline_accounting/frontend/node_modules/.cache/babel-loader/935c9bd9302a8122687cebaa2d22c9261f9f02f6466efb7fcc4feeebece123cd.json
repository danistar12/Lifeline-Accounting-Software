{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"income-statement\"\n};\nvar _hoisted_2 = {\n  key: 0\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"error\"\n};\nvar _hoisted_4 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Income Statement\", -1 /* CACHED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\")) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), !$data.loading && !$data.error ? (_openBlock(), _createElementBlock(\"pre\", _hoisted_4, _toDisplayString($data.data), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","$data","loading","_hoisted_2","error","_hoisted_3","_toDisplayString","_hoisted_4","data"],"sources":["C:\\Users\\DLloy\\OneDrive\\Desktop\\Data_Centers\\Lifeline Accounting Software\\Accounting-Version-1\\lifeline_accounting\\frontend\\src\\views\\reports\\IncomeStatement.vue"],"sourcesContent":["<template>\r\n  <div class=\"income-statement\">\r\n    <h1>Income Statement</h1>\r\n    <div v-if=\"loading\">Loading...</div>\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n    <pre v-if=\"!loading && !error\">{{ data }}</pre>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  name: 'IncomeStatement',\r\n  data() {\r\n    return {\r\n      data: null,\r\n      loading: false,\r\n      error: null\r\n    };\r\n  },\r\n  async mounted() {\r\n    this.loading = true;\r\n    try {\r\n      const response = await axios.get('/api/reports/income-statement/');\r\n      this.data = response.data;\r\n    } catch (err) {\r\n      this.error = 'Failed to load income statement.';\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.error { color: red; }\r\n</style>\r\n"],"mappings":";;EACO,SAAM;AAAkB;;;;;;EAGT,SAAM;;;;;;uBAH1BA,mBAAA,CAKM,OALNC,UAKM,G,0BAJJC,mBAAA,CAAyB,YAArB,kBAAgB,qBACTC,KAAA,CAAAC,OAAO,I,cAAlBJ,mBAAA,CAAoC,OAAAK,UAAA,EAAhB,YAAU,K,mCACnBF,KAAA,CAAAG,KAAK,I,cAAhBN,mBAAA,CAAiD,OAAjDO,UAAiD,EAAAC,gBAAA,CAAdL,KAAA,CAAAG,KAAK,oB,oCAC5BH,KAAA,CAAAC,OAAO,KAAKD,KAAA,CAAAG,KAAK,I,cAA7BN,mBAAA,CAA+C,OAAAS,UAAA,EAAAD,gBAAA,CAAbL,KAAA,CAAAO,IAAI,oB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}