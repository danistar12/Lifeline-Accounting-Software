{"ast":null,"code":"import \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"dashboard\"\n};\nvar _hoisted_2 = {\n  key: 0\n};\nvar _hoisted_3 = {\n  key: 1,\n  \"class\": \"error\"\n};\nvar _hoisted_4 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Dashboard\", -1 /* CACHED */)), _cache[1] || (_cache[1] = _createElementVNode(\"p\", null, \"Welcome to the Lifeline Accounting System.\", -1 /* CACHED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading metrics...\")) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), !$data.loading && !$data.error ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.metrics, function (metric) {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: metric.metric_id\n    }, _toDisplayString(metric.name) + \": \" + _toDisplayString(metric.value) + \" (updated: \" + _toDisplayString(new Date(metric.updated_date).toLocaleString()) + \") \", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","$data","loading","_hoisted_2","error","_hoisted_3","_toDisplayString","_hoisted_4","_Fragment","_renderList","metrics","metric","key","metric_id","name","value","Date","updated_date","toLocaleString"],"sources":["C:\\Users\\ds3297l\\Desktop\\Accountint Software\\Design 2\\lifeline_accounting\\frontend\\src\\views\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    <h1>Dashboard</h1>\r\n    <p>Welcome to the Lifeline Accounting System.</p>\r\n    <div v-if=\"loading\">Loading metrics...</div>\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n    <ul v-if=\"!loading && !error\">\r\n      <li v-for=\"metric in metrics\" :key=\"metric.metric_id\">\r\n        {{ metric.name }}: {{ metric.value }} (updated: {{ new Date(metric.updated_date).toLocaleString() }})\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  name: 'Dashboard',\r\n  data() {\r\n    return {\r\n      metrics: [],\r\n      loading: false,\r\n      error: null\r\n    };\r\n  },\r\n  async mounted() {\r\n    this.loading = true;\r\n    try {\r\n      const response = await axios.get('/api/dashboard/metrics/');\r\n      this.metrics = response.data;\r\n    } catch (err) {\r\n      this.error = 'Failed to load dashboard metrics.';\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.error { color: red; }\r\n</style>\r\n"],"mappings":";;;;EACO,SAAM;AAAW;;;;;;EAIF,SAAM;;;;;;uBAJ1BA,mBAAA,CAUM,OAVNC,UAUM,G,0BATJC,mBAAA,CAAkB,YAAd,WAAS,qB,0BACbA,mBAAA,CAAiD,WAA9C,4CAA0C,qBAClCC,KAAA,CAAAC,OAAO,I,cAAlBJ,mBAAA,CAA4C,OAAAK,UAAA,EAAxB,oBAAkB,K,mCAC3BF,KAAA,CAAAG,KAAK,I,cAAhBN,mBAAA,CAAiD,OAAjDO,UAAiD,EAAAC,gBAAA,CAAdL,KAAA,CAAAG,KAAK,oB,oCAC7BH,KAAA,CAAAC,OAAO,KAAKD,KAAA,CAAAG,KAAK,I,cAA5BN,mBAAA,CAIK,MAAAS,UAAA,I,kBAHHT,mBAAA,CAEKU,SAAA,QAAAC,WAAA,CAFgBR,KAAA,CAAAS,OAAO,YAAjBC,MAAM;yBAAjBb,mBAAA,CAEK;MAF0Bc,GAAG,EAAED,MAAM,CAACE;wBACtCF,MAAM,CAACG,IAAI,IAAG,IAAE,GAAAR,gBAAA,CAAGK,MAAM,CAACI,KAAK,IAAG,aAAW,GAAAT,gBAAA,KAAOU,IAAI,CAACL,MAAM,CAACM,YAAY,EAAEC,cAAc,MAAK,IACtG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}