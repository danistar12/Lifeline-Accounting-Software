{"ast":null,"code":"import _regenerator from \"C:/Users/DLloy/OneDrive/Desktop/Data_Centers/Lifeline Accounting Software/Accounting-Version-1/lifeline_accounting/frontend/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _slicedToArray from \"C:/Users/DLloy/OneDrive/Desktop/Data_Centers/Lifeline Accounting Software/Accounting-Version-1/lifeline_accounting/frontend/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"C:/Users/DLloy/OneDrive/Desktop/Data_Centers/Lifeline Accounting Software/Accounting-Version-1/lifeline_accounting/frontend/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/DLloy/OneDrive/Desktop/Data_Centers/Lifeline Accounting Software/Accounting-Version-1/lifeline_accounting/frontend/node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { mapState, mapGetters } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'DashboardView',\n  data: function data() {\n    return {\n      loading: true,\n      error: null,\n      metrics: {\n        revenue: {\n          value: 0,\n          change: 0,\n          label: 'Monthly Revenue'\n        },\n        expenses: {\n          value: 0,\n          change: 0,\n          label: 'Monthly Expenses'\n        },\n        profit: {\n          value: 0,\n          change: 0,\n          label: 'Net Profit'\n        },\n        cash_flow: {\n          value: 0,\n          change: 0,\n          label: 'YTD Cash Flow'\n        }\n      },\n      recentActivities: [],\n      pendingItems: [],\n      financialHealth: {\n        score: 0,\n        status: 'good',\n        metrics: {\n          profit_margin: 0,\n          debt_ratio: 0,\n          cash_position: 0,\n          revenue_growth: 0\n        }\n      },\n      chartData: {\n        revenue_trend: [],\n        expense_breakdown: []\n      },\n      currentPeriod: 'month',\n      activeCompany: null,\n      userRole: 'Administrator'\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapState(['user'])), mapGetters(['isLoggedIn'])), {}, {\n    displayName: function displayName() {\n      if (!this.user) return 'User';\n      var userData = this.user.user || this.user;\n      if (userData.first_name && userData.last_name) {\n        return \"\".concat(userData.first_name, \" \").concat(userData.last_name);\n      } else if (userData.first_name) {\n        return userData.first_name;\n      } else {\n        return userData.username || 'User';\n      }\n    },\n    timeOfDay: function timeOfDay() {\n      var hour = new Date().getHours();\n      if (hour < 12) return 'morning';\n      if (hour < 17) return 'afternoon';\n      return 'evening';\n    },\n    companyName: function companyName() {\n      if (this.user && this.user.company_roles && this.user.company_roles.length > 0) {\n        return this.user.company_roles[0].company.name;\n      }\n      return 'Your Company';\n    }\n  }),\n  methods: {\n    loadDashboardData: function loadDashboardData() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _yield$Promise$all, _yield$Promise$all2, metricsRes, activityRes, pendingRes, healthRes, chartsRes, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.p = 0;\n              _this.loading = true;\n\n              // Load all dashboard data in parallel\n              _context.n = 1;\n              return Promise.all([_this.fetchMetrics(), _this.fetchActivity(), _this.fetchPending(), _this.fetchFinancialHealth(), _this.fetchCharts()]);\n            case 1:\n              _yield$Promise$all = _context.v;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 5);\n              metricsRes = _yield$Promise$all2[0];\n              activityRes = _yield$Promise$all2[1];\n              pendingRes = _yield$Promise$all2[2];\n              healthRes = _yield$Promise$all2[3];\n              chartsRes = _yield$Promise$all2[4];\n              _this.metrics = metricsRes.data;\n              _this.recentActivities = activityRes.data.map(function (activity) {\n                return _objectSpread(_objectSpread({}, activity), {}, {\n                  icon: _this.getActivityIcon(activity.type),\n                  amountType: activity.amount > 0 ? 'positive' : 'negative'\n                });\n              });\n              _this.pendingItems = pendingRes.data.map(function (item) {\n                return _objectSpread(_objectSpread({}, item), {}, {\n                  icon: _this.getPendingIcon(item.type),\n                  count: '1'\n                });\n              });\n              _this.financialHealth = healthRes.data;\n              _this.chartData = chartsRes.data;\n              _context.n = 3;\n              break;\n            case 2:\n              _context.p = 2;\n              _t = _context.v;\n              console.error('Error loading dashboard data:', _t);\n              _this.error = 'Failed to load dashboard data. Please try again.';\n            case 3:\n              _context.p = 3;\n              _this.loading = false;\n              return _context.f(3);\n            case 4:\n              return _context.a(2);\n          }\n        }, _callee, null, [[0, 2, 3, 4]]);\n      }))();\n    },\n    fetchMetrics: function fetchMetrics() {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              _context2.n = 1;\n              return axios.get('/api/accounts/dashboard/metrics/');\n            case 1:\n              return _context2.a(2, _context2.v);\n          }\n        }, _callee2);\n      }))();\n    },\n    fetchActivity: function fetchActivity() {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.n = 1;\n              return axios.get('/api/accounts/dashboard/activity/');\n            case 1:\n              return _context3.a(2, _context3.v);\n          }\n        }, _callee3);\n      }))();\n    },\n    fetchPending: function fetchPending() {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              _context4.n = 1;\n              return axios.get('/api/accounts/dashboard/pending/');\n            case 1:\n              return _context4.a(2, _context4.v);\n          }\n        }, _callee4);\n      }))();\n    },\n    fetchFinancialHealth: function fetchFinancialHealth() {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              _context5.n = 1;\n              return axios.get('/api/accounts/dashboard/health/');\n            case 1:\n              return _context5.a(2, _context5.v);\n          }\n        }, _callee5);\n      }))();\n    },\n    fetchCharts: function fetchCharts() {\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6() {\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.n) {\n            case 0:\n              _context6.n = 1;\n              return axios.get('/api/accounts/dashboard/charts/');\n            case 1:\n              return _context6.a(2, _context6.v);\n          }\n        }, _callee6);\n      }))();\n    },\n    formatCurrency: function formatCurrency(value) {\n      return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n      }).format(Math.abs(value));\n    },\n    formatChange: function formatChange(change) {\n      var sign = change >= 0 ? '+' : '';\n      return \"\".concat(sign).concat(change.toFixed(1), \"%\");\n    },\n    getActivityIcon: function getActivityIcon(type) {\n      var icons = {\n        income: '💰',\n        expense: '💸',\n        invoice: '🧾',\n        bank: '🏦'\n      };\n      return icons[type] || '📊';\n    },\n    getPendingIcon: function getPendingIcon(type) {\n      var icons = {\n        invoice: '📋',\n        bill: '💸',\n        payment: '💳',\n        reconciliation: '⚖️'\n      };\n      return icons[type] || '⏰';\n    },\n    getCompanyInitials: function getCompanyInitials(name) {\n      if (!name) return 'C';\n      return name.split(' ').map(function (word) {\n        return word.charAt(0);\n      }).join('').toUpperCase().substring(0, 2);\n    },\n    getHealthScoreClass: function getHealthScoreClass() {\n      var score = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.financialHealth.score;\n      if (score >= 80) return 'excellent';\n      if (score >= 60) return 'good';\n      if (score >= 40) return 'fair';\n      return 'poor';\n    },\n    getHealthMetricIcon: function getHealthMetricIcon(metric) {\n      var icons = {\n        profit_margin: '📈',\n        debt_ratio: '⚖️',\n        cash_position: '💰',\n        revenue_growth: '📊'\n      };\n      return icons[metric] || '📋';\n    },\n    getHealthMetricLabel: function getHealthMetricLabel(metric) {\n      var labels = {\n        profit_margin: 'Profit Margin',\n        debt_ratio: 'Debt Ratio',\n        cash_position: 'Cash Position',\n        revenue_growth: 'Revenue Growth'\n      };\n      return labels[metric] || metric;\n    },\n    formatHealthMetric: function formatHealthMetric(key, value) {\n      switch (key) {\n        case 'profit_margin':\n        case 'debt_ratio':\n        case 'revenue_growth':\n          return \"\".concat(value, \"%\");\n        case 'cash_position':\n          return this.formatCurrency(value);\n        default:\n          return value;\n      }\n    },\n    navigateTo: function navigateTo(path) {\n      this.$router.push(path);\n    },\n    navigateToAction: function navigateToAction(action) {\n      var routes = {\n        'create-invoice': '/core/invoices',\n        'add-expense': '/core/general-ledger',\n        'bank-reconciliation': '/banking/reconciliations',\n        'generate-report': '/reports'\n      };\n      if (routes[action]) {\n        this.$router.push(routes[action]);\n      }\n    },\n    viewAllActivity: function viewAllActivity() {\n      this.$router.push('/core/general-ledger');\n    },\n    viewAllPending: function viewAllPending() {\n      this.$router.push('/dashboard/pending');\n    },\n    changePeriod: function changePeriod(period) {\n      this.currentPeriod = period;\n      // Refresh chart data for new period\n      this.fetchCharts();\n    },\n    refreshData: function refreshData() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7() {\n        return _regenerator().w(function (_context7) {\n          while (1) switch (_context7.n) {\n            case 0:\n              _context7.n = 1;\n              return _this2.loadDashboardData();\n            case 1:\n              return _context7.a(2);\n          }\n        }, _callee7);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8() {\n      return _regenerator().w(function (_context8) {\n        while (1) switch (_context8.n) {\n          case 0:\n            _context8.n = 1;\n            return _this3.loadDashboardData();\n          case 1:\n            return _context8.a(2);\n        }\n      }, _callee8);\n    }))();\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","axios","name","data","loading","error","metrics","revenue","value","change","label","expenses","profit","cash_flow","recentActivities","pendingItems","financialHealth","score","status","profit_margin","debt_ratio","cash_position","revenue_growth","chartData","revenue_trend","expense_breakdown","currentPeriod","activeCompany","userRole","computed","_objectSpread","displayName","user","userData","first_name","last_name","concat","username","timeOfDay","hour","Date","getHours","companyName","company_roles","length","company","methods","loadDashboardData","_this","_asyncToGenerator","_regenerator","m","_callee","_yield$Promise$all","_yield$Promise$all2","metricsRes","activityRes","pendingRes","healthRes","chartsRes","_t","w","_context","n","p","Promise","all","fetchMetrics","fetchActivity","fetchPending","fetchFinancialHealth","fetchCharts","v","_slicedToArray","map","activity","icon","getActivityIcon","type","amountType","amount","item","getPendingIcon","count","console","f","a","_callee2","_context2","get","_callee3","_context3","_callee4","_context4","_callee5","_context5","_callee6","_context6","formatCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","Math","abs","formatChange","sign","toFixed","icons","income","expense","invoice","bank","bill","payment","reconciliation","getCompanyInitials","split","word","charAt","join","toUpperCase","substring","getHealthScoreClass","arguments","undefined","getHealthMetricIcon","metric","getHealthMetricLabel","labels","formatHealthMetric","key","navigateTo","path","$router","push","navigateToAction","action","routes","viewAllActivity","viewAllPending","changePeriod","period","refreshData","_this2","_callee7","_context7","mounted","_this3","_callee8","_context8"],"sources":["C:\\Users\\DLloy\\OneDrive\\Desktop\\Data_Centers\\Lifeline Accounting Software\\Accounting-Version-1\\lifeline_accounting\\frontend\\src\\views\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <!-- Welcome Header -->\r\n    <div class=\"welcome-section\">\r\n      <div class=\"welcome-content\">\r\n        <div class=\"welcome-text\">\r\n          <h1 class=\"welcome-title\">\r\n            <span class=\"greeting\">Good {{ timeOfDay }},</span>\r\n            <span class=\"user-name\">{{ displayName }}! 👋</span>\r\n          </h1>\r\n          <p class=\"welcome-subtitle\">Here's what's happening with your finances today</p>\r\n        </div>\r\n        <div class=\"company-info\" v-if=\"activeCompany\">\r\n          <div class=\"company-badge\">\r\n            <div class=\"company-avatar\">\r\n              {{ getCompanyInitials(activeCompany.company_name) }}\r\n            </div>\r\n            <div class=\"company-details\">\r\n              <span class=\"company-name\">{{ activeCompany.company_name }}</span>\r\n              <span class=\"company-role\">{{ userRole }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Key Metrics Cards -->\r\n    <div class=\"metrics-grid\">\r\n      <div class=\"metric-card revenue-card\" @click=\"navigateTo('/reports/income-statement')\">\r\n        <div class=\"metric-icon\">💰</div>\r\n        <div class=\"metric-content\">\r\n          <div class=\"metric-value\">${{ formatCurrency(metrics.totalRevenue) }}</div>\r\n          <div class=\"metric-label\">Total Revenue</div>\r\n          <div class=\"metric-change positive\">\r\n            <span class=\"change-icon\">📈</span>\r\n            <span class=\"change-value\">+{{ metrics.revenueGrowth }}%</span>\r\n            <span class=\"change-period\">vs last month</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"metric-action\">\r\n          <i class=\"action-icon\">👁️</i>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"metric-card expense-card\" @click=\"navigateTo('/core/bills')\">\r\n        <div class=\"metric-icon\">📊</div>\r\n        <div class=\"metric-content\">\r\n          <div class=\"metric-value\">${{ formatCurrency(metrics.totalExpenses) }}</div>\r\n          <div class=\"metric-label\">Total Expenses</div>\r\n          <div class=\"metric-change negative\">\r\n            <span class=\"change-icon\">📉</span>\r\n            <span class=\"change-value\">+{{ metrics.expenseGrowth }}%</span>\r\n            <span class=\"change-period\">vs last month</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"metric-action\">\r\n          <i class=\"action-icon\">👁️</i>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"metric-card profit-card\">\r\n        <div class=\"metric-icon\">💎</div>\r\n        <div class=\"metric-content\">\r\n          <div class=\"metric-value\">${{ formatCurrency(metrics.netProfit) }}</div>\r\n          <div class=\"metric-label\">Net Profit</div>\r\n          <div class=\"metric-change\" :class=\"metrics.profitGrowth >= 0 ? 'positive' : 'negative'\">\r\n            <span class=\"change-icon\">{{ metrics.profitGrowth >= 0 ? '📈' : '📉' }}</span>\r\n            <span class=\"change-value\">{{ metrics.profitGrowth >= 0 ? '+' : '' }}{{ metrics.profitGrowth }}%</span>\r\n            <span class=\"change-period\">vs last month</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"metric-action\">\r\n          <i class=\"action-icon\">👁️</i>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"metric-card cashflow-card\" @click=\"navigateTo('/reports/cash-flow')\">\r\n        <div class=\"metric-icon\">🌊</div>\r\n        <div class=\"metric-content\">\r\n          <div class=\"metric-value\">${{ formatCurrency(metrics.cashFlow) }}</div>\r\n          <div class=\"metric-label\">Cash Flow</div>\r\n          <div class=\"metric-change\" :class=\"metrics.cashFlowChange >= 0 ? 'positive' : 'negative'\">\r\n            <span class=\"change-icon\">{{ metrics.cashFlowChange >= 0 ? '💹' : '⬇️' }}</span>\r\n            <span class=\"change-value\">{{ metrics.cashFlowChange >= 0 ? '+' : '' }}{{ metrics.cashFlowChange }}%</span>\r\n            <span class=\"change-period\">vs last month</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"metric-action\">\r\n          <i class=\"action-icon\">👁️</i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Quick Actions & Recent Activity -->\r\n    <div class=\"dashboard-grid\">\r\n      <!-- Quick Actions Panel -->\r\n      <div class=\"dashboard-panel quick-actions-panel\">\r\n        <div class=\"panel-header\">\r\n          <h3 class=\"panel-title\">\r\n            <i class=\"panel-icon\">⚡</i>\r\n            Quick Actions\r\n          </h3>\r\n        </div>\r\n        <div class=\"quick-actions\">\r\n          <button class=\"action-btn invoice-btn\" @click=\"navigateTo('/core/invoices')\">\r\n            <div class=\"btn-icon\">🧾</div>\r\n            <div class=\"btn-content\">\r\n              <div class=\"btn-title\">Create Invoice</div>\r\n              <div class=\"btn-subtitle\">Send to customers</div>\r\n            </div>\r\n          </button>\r\n          \r\n          <button class=\"action-btn expense-btn\" @click=\"navigateTo('/core/bills')\">\r\n            <div class=\"btn-icon\">💸</div>\r\n            <div class=\"btn-content\">\r\n              <div class=\"btn-title\">Add Expense</div>\r\n              <div class=\"btn-subtitle\">Track spending</div>\r\n            </div>\r\n          </button>\r\n          \r\n          <button class=\"action-btn customer-btn\" @click=\"navigateTo('/core/customers')\">\r\n            <div class=\"btn-icon\">👤</div>\r\n            <div class=\"btn-content\">\r\n              <div class=\"btn-title\">Add Customer</div>\r\n              <div class=\"btn-subtitle\">Grow your base</div>\r\n            </div>\r\n          </button>\r\n          \r\n          <button class=\"action-btn reconcile-btn\" @click=\"navigateTo('/banking/reconciliations')\">\r\n            <div class=\"btn-icon\">⚖️</div>\r\n            <div class=\"btn-content\">\r\n              <div class=\"btn-title\">Reconcile Bank</div>\r\n              <div class=\"btn-subtitle\">Balance accounts</div>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Recent Activity -->\r\n      <div class=\"dashboard-panel activity-panel\">\r\n        <div class=\"panel-header\">\r\n          <h3 class=\"panel-title\">\r\n            <i class=\"panel-icon\">🕒</i>\r\n            Recent Activity\r\n          </h3>\r\n          <button class=\"panel-action\" @click=\"navigateTo('/core/general-ledger')\">\r\n            View All\r\n          </button>\r\n        </div>\r\n        <div class=\"activity-list\">\r\n          <div class=\"activity-item\" v-for=\"activity in recentActivities\" :key=\"activity.id\">\r\n            <div class=\"activity-icon\" :class=\"activity.type\">\r\n              {{ activity.icon }}\r\n            </div>\r\n            <div class=\"activity-content\">\r\n              <div class=\"activity-title\">{{ activity.title }}</div>\r\n              <div class=\"activity-details\">{{ activity.details }}</div>\r\n              <div class=\"activity-time\">{{ activity.time }}</div>\r\n            </div>\r\n            <div class=\"activity-amount\" :class=\"activity.amountType\">\r\n              {{ activity.amount }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Pending Items -->\r\n      <div class=\"dashboard-panel pending-panel\">\r\n        <div class=\"panel-header\">\r\n          <h3 class=\"panel-title\">\r\n            <i class=\"panel-icon\">⏳</i>\r\n            Pending Items\r\n          </h3>\r\n        </div>\r\n        <div class=\"pending-list\">\r\n          <div class=\"pending-item\" v-for=\"item in pendingItems\" :key=\"item.id\" @click=\"navigateTo(item.link)\">\r\n            <div class=\"pending-icon\" :class=\"item.type\">\r\n              {{ item.icon }}\r\n            </div>\r\n            <div class=\"pending-content\">\r\n              <div class=\"pending-title\">{{ item.title }}</div>\r\n              <div class=\"pending-subtitle\">{{ item.subtitle }}</div>\r\n            </div>\r\n            <div class=\"pending-badge\">\r\n              {{ item.count }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Financial Health Score -->\r\n      <div class=\"dashboard-panel health-panel\">\r\n        <div class=\"panel-header\">\r\n          <h3 class=\"panel-title\">\r\n            <i class=\"panel-icon\">💊</i>\r\n            Financial Health\r\n          </h3>\r\n        </div>\r\n        <div class=\"health-content\">\r\n          <div class=\"health-score\">\r\n            <div class=\"score-circle\" :class=\"getHealthScoreClass(healthScore)\">\r\n              <div class=\"score-value\">{{ healthScore }}</div>\r\n              <div class=\"score-label\">Score</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"health-metrics\">\r\n            <div class=\"health-metric\">\r\n              <div class=\"health-metric-icon\">💰</div>\r\n              <div class=\"health-metric-content\">\r\n                <div class=\"health-metric-label\">Cash Ratio</div>\r\n                <div class=\"health-metric-value\">{{ metrics.cashRatio }}%</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"health-metric\">\r\n              <div class=\"health-metric-icon\">📊</div>\r\n              <div class=\"health-metric-content\">\r\n                <div class=\"health-metric-label\">Profit Margin</div>\r\n                <div class=\"health-metric-value\">{{ metrics.profitMargin }}%</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"health-metric\">\r\n              <div class=\"health-metric-icon\">🎯</div>\r\n              <div class=\"health-metric-content\">\r\n                <div class=\"health-metric-label\">Growth Rate</div>\r\n                <div class=\"health-metric-value\">{{ metrics.growthRate }}%</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Charts Row -->\r\n    <div class=\"charts-section\">\r\n      <!-- Revenue Trend Chart -->\r\n      <div class=\"chart-panel\">\r\n        <div class=\"panel-header\">\r\n          <h3 class=\"panel-title\">\r\n            <i class=\"panel-icon\">📈</i>\r\n            Revenue Trend\r\n          </h3>\r\n          <div class=\"chart-period\">\r\n            <button class=\"period-btn active\">6M</button>\r\n            <button class=\"period-btn\">1Y</button>\r\n            <button class=\"period-btn\">2Y</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"chart-container\">\r\n          <div class=\"chart-placeholder\">\r\n            <div class=\"chart-bars\">\r\n              <div class=\"chart-bar\" style=\"height: 40%\"></div>\r\n              <div class=\"chart-bar\" style=\"height: 65%\"></div>\r\n              <div class=\"chart-bar\" style=\"height: 55%\"></div>\r\n              <div class=\"chart-bar\" style=\"height: 80%\"></div>\r\n              <div class=\"chart-bar\" style=\"height: 70%\"></div>\r\n              <div class=\"chart-bar\" style=\"height: 90%\"></div>\r\n            </div>\r\n            <div class=\"chart-legend\">\r\n              <span>Jan</span>\r\n              <span>Feb</span>\r\n              <span>Mar</span>\r\n              <span>Apr</span>\r\n              <span>May</span>\r\n              <span>Jun</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Expense Breakdown -->\r\n      <div class=\"chart-panel\">\r\n        <div class=\"panel-header\">\r\n          <h3 class=\"panel-title\">\r\n            <i class=\"panel-icon\">🥧</i>\r\n            Expense Breakdown\r\n          </h3>\r\n        </div>\r\n        <div class=\"chart-container\">\r\n          <div class=\"expense-breakdown\">\r\n            <div class=\"expense-item\">\r\n              <div class=\"expense-color\" style=\"background: #007bff;\"></div>\r\n              <div class=\"expense-label\">Operating</div>\r\n              <div class=\"expense-value\">45%</div>\r\n            </div>\r\n            <div class=\"expense-item\">\r\n              <div class=\"expense-color\" style=\"background: #28a745;\"></div>\r\n              <div class=\"expense-label\">Marketing</div>\r\n              <div class=\"expense-value\">25%</div>\r\n            </div>\r\n            <div class=\"expense-item\">\r\n              <div class=\"expense-color\" style=\"background: #ffc107;\"></div>\r\n              <div class=\"expense-label\">Staff</div>\r\n              <div class=\"expense-value\">20%</div>\r\n            </div>\r\n            <div class=\"expense-item\">\r\n              <div class=\"expense-color\" style=\"background: #dc3545;\"></div>\r\n              <div class=\"expense-label\">Other</div>\r\n              <div class=\"expense-value\">10%</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters } from 'vuex';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'DashboardView',\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      error: null,\r\n      metrics: {\r\n        revenue: { value: 0, change: 0, label: 'Monthly Revenue' },\r\n        expenses: { value: 0, change: 0, label: 'Monthly Expenses' },\r\n        profit: { value: 0, change: 0, label: 'Net Profit' },\r\n        cash_flow: { value: 0, change: 0, label: 'YTD Cash Flow' }\r\n      },\r\n      recentActivities: [],\r\n      pendingItems: [],\r\n      financialHealth: {\r\n        score: 0,\r\n        status: 'good',\r\n        metrics: {\r\n          profit_margin: 0,\r\n          debt_ratio: 0,\r\n          cash_position: 0,\r\n          revenue_growth: 0\r\n        }\r\n      },\r\n      chartData: {\r\n        revenue_trend: [],\r\n        expense_breakdown: []\r\n      },\r\n      currentPeriod: 'month',\r\n      activeCompany: null,\r\n      userRole: 'Administrator'\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['user']),\r\n    ...mapGetters(['isLoggedIn']),\r\n    displayName() {\r\n      if (!this.user) return 'User';\r\n      \r\n      const userData = this.user.user || this.user;\r\n      \r\n      if (userData.first_name && userData.last_name) {\r\n        return `${userData.first_name} ${userData.last_name}`;\r\n      } else if (userData.first_name) {\r\n        return userData.first_name;\r\n      } else {\r\n        return userData.username || 'User';\r\n      }\r\n    },\r\n    timeOfDay() {\r\n      const hour = new Date().getHours();\r\n      if (hour < 12) return 'morning';\r\n      if (hour < 17) return 'afternoon';\r\n      return 'evening';\r\n    },\r\n    companyName() {\r\n      if (this.user && this.user.company_roles && this.user.company_roles.length > 0) {\r\n        return this.user.company_roles[0].company.name\r\n      }\r\n      return 'Your Company'\r\n    }\r\n  },\r\n  methods: {\r\n    async loadDashboardData() {\r\n      try {\r\n        this.loading = true;\r\n        \r\n        // Load all dashboard data in parallel\r\n        const [metricsRes, activityRes, pendingRes, healthRes, chartsRes] = await Promise.all([\r\n          this.fetchMetrics(),\r\n          this.fetchActivity(),\r\n          this.fetchPending(),\r\n          this.fetchFinancialHealth(),\r\n          this.fetchCharts()\r\n        ]);\r\n        \r\n        this.metrics = metricsRes.data;\r\n        this.recentActivities = activityRes.data.map(activity => ({\r\n          ...activity,\r\n          icon: this.getActivityIcon(activity.type),\r\n          amountType: activity.amount > 0 ? 'positive' : 'negative'\r\n        }));\r\n        this.pendingItems = pendingRes.data.map(item => ({\r\n          ...item,\r\n          icon: this.getPendingIcon(item.type),\r\n          count: '1'\r\n        }));\r\n        this.financialHealth = healthRes.data;\r\n        this.chartData = chartsRes.data;\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading dashboard data:', error);\r\n        this.error = 'Failed to load dashboard data. Please try again.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    \r\n    async fetchMetrics() {\r\n      return await axios.get('/api/accounts/dashboard/metrics/');\r\n    },\r\n    \r\n    async fetchActivity() {\r\n      return await axios.get('/api/accounts/dashboard/activity/');\r\n    },\r\n    \r\n    async fetchPending() {\r\n      return await axios.get('/api/accounts/dashboard/pending/');\r\n    },\r\n    \r\n    async fetchFinancialHealth() {\r\n      return await axios.get('/api/accounts/dashboard/health/');\r\n    },\r\n    \r\n    async fetchCharts() {\r\n      return await axios.get('/api/accounts/dashboard/charts/');\r\n    },\r\n    \r\n    formatCurrency(value) {\r\n      return new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 0\r\n      }).format(Math.abs(value));\r\n    },\r\n    \r\n    formatChange(change) {\r\n      const sign = change >= 0 ? '+' : '';\r\n      return `${sign}${change.toFixed(1)}%`;\r\n    },\r\n    \r\n    getActivityIcon(type) {\r\n      const icons = {\r\n        income: '💰',\r\n        expense: '💸',\r\n        invoice: '🧾',\r\n        bank: '🏦'\r\n      };\r\n      return icons[type] || '📊';\r\n    },\r\n    \r\n    getPendingIcon(type) {\r\n      const icons = {\r\n        invoice: '📋',\r\n        bill: '💸',\r\n        payment: '💳',\r\n        reconciliation: '⚖️'\r\n      };\r\n      return icons[type] || '⏰';\r\n    },\r\n    \r\n    getCompanyInitials(name) {\r\n      if (!name) return 'C';\r\n      return name.split(' ')\r\n        .map(word => word.charAt(0))\r\n        .join('')\r\n        .toUpperCase()\r\n        .substring(0, 2);\r\n    },\r\n    \r\n    getHealthScoreClass(score = this.financialHealth.score) {\r\n      if (score >= 80) return 'excellent';\r\n      if (score >= 60) return 'good';\r\n      if (score >= 40) return 'fair';\r\n      return 'poor';\r\n    },\r\n    \r\n    getHealthMetricIcon(metric) {\r\n      const icons = {\r\n        profit_margin: '📈',\r\n        debt_ratio: '⚖️',\r\n        cash_position: '💰',\r\n        revenue_growth: '📊'\r\n      };\r\n      return icons[metric] || '📋';\r\n    },\r\n    \r\n    getHealthMetricLabel(metric) {\r\n      const labels = {\r\n        profit_margin: 'Profit Margin',\r\n        debt_ratio: 'Debt Ratio',\r\n        cash_position: 'Cash Position',\r\n        revenue_growth: 'Revenue Growth'\r\n      };\r\n      return labels[metric] || metric;\r\n    },\r\n    \r\n    formatHealthMetric(key, value) {\r\n      switch (key) {\r\n        case 'profit_margin':\r\n        case 'debt_ratio':\r\n        case 'revenue_growth':\r\n          return `${value}%`;\r\n        case 'cash_position':\r\n          return this.formatCurrency(value);\r\n        default:\r\n          return value;\r\n      }\r\n    },\r\n    \r\n    navigateTo(path) {\r\n      this.$router.push(path);\r\n    },\r\n    \r\n    navigateToAction(action) {\r\n      const routes = {\r\n        'create-invoice': '/core/invoices',\r\n        'add-expense': '/core/general-ledger',\r\n        'bank-reconciliation': '/banking/reconciliations',\r\n        'generate-report': '/reports'\r\n      };\r\n      \r\n      if (routes[action]) {\r\n        this.$router.push(routes[action]);\r\n      }\r\n    },\r\n    \r\n    viewAllActivity() {\r\n      this.$router.push('/core/general-ledger');\r\n    },\r\n    \r\n    viewAllPending() {\r\n      this.$router.push('/dashboard/pending');\r\n    },\r\n    \r\n    changePeriod(period) {\r\n      this.currentPeriod = period;\r\n      // Refresh chart data for new period\r\n      this.fetchCharts();\r\n    },\r\n    \r\n    async refreshData() {\r\n      await this.loadDashboardData();\r\n    }\r\n  },\r\n  \r\n  async mounted() {\r\n    await this.loadDashboardData();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-container {\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 1.5rem;\r\n}\r\n\r\n/* Welcome Section */\r\n.welcome-section {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  border-radius: 16px;\r\n  padding: 2rem;\r\n  margin-bottom: 2rem;\r\n  color: white;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.welcome-section::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: -50%;\r\n  right: -20%;\r\n  width: 200px;\r\n  height: 200px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 50%;\r\n}\r\n\r\n.welcome-content {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.welcome-title {\r\n  font-size: 2.2rem;\r\n  font-weight: 700;\r\n  margin: 0 0 0.5rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.greeting {\r\n  font-size: 1.1rem;\r\n  font-weight: 400;\r\n  opacity: 0.9;\r\n}\r\n\r\n.user-name {\r\n  background: linear-gradient(45deg, #fff, #e3f2fd);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.welcome-subtitle {\r\n  font-size: 1.1rem;\r\n  opacity: 0.9;\r\n  margin: 0;\r\n}\r\n\r\n.company-badge {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(10px);\r\n  padding: 1rem 1.5rem;\r\n  border-radius: 12px;\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n.company-avatar {\r\n  width: 48px;\r\n  height: 48px;\r\n  border-radius: 50%;\r\n  background: linear-gradient(135deg, #fff, #e3f2fd);\r\n  color: #1565c0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-weight: 700;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.company-details {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.company-name {\r\n  font-weight: 600;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.company-role {\r\n  font-size: 0.9rem;\r\n  opacity: 0.8;\r\n}\r\n\r\n/* Metrics Grid */\r\n.metrics-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\r\n  gap: 1.5rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.metric-card {\r\n  background: white;\r\n  border-radius: 16px;\r\n  padding: 1.5rem;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border: 1px solid #f0f0f0;\r\n}\r\n\r\n.metric-card:hover {\r\n  transform: translateY(-4px);\r\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.metric-card::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 4px;\r\n}\r\n\r\n.revenue-card::before {\r\n  background: linear-gradient(90deg, #4CAF50, #8BC34A);\r\n}\r\n\r\n.expense-card::before {\r\n  background: linear-gradient(90deg, #FF9800, #FFC107);\r\n}\r\n\r\n.profit-card::before {\r\n  background: linear-gradient(90deg, #2196F3, #03A9F4);\r\n}\r\n\r\n.cashflow-card::before {\r\n  background: linear-gradient(90deg, #9C27B0, #E91E63);\r\n}\r\n\r\n.metric-card {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.metric-icon {\r\n  font-size: 2.5rem;\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: linear-gradient(135deg, #f8f9fa, #e9ecef);\r\n}\r\n\r\n.metric-content {\r\n  flex: 1;\r\n}\r\n\r\n.metric-value {\r\n  font-size: 1.8rem;\r\n  font-weight: 700;\r\n  color: #2c3e50;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.metric-label {\r\n  font-size: 0.95rem;\r\n  color: #6c757d;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.metric-change {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.25rem;\r\n  font-size: 0.85rem;\r\n}\r\n\r\n.metric-change.positive {\r\n  color: #28a745;\r\n}\r\n\r\n.metric-change.negative {\r\n  color: #dc3545;\r\n}\r\n\r\n.change-icon {\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.change-value {\r\n  font-weight: 600;\r\n}\r\n\r\n.change-period {\r\n  color: #6c757d;\r\n}\r\n\r\n.metric-action {\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease;\r\n  font-size: 1.2rem;\r\n  color: #6c757d;\r\n}\r\n\r\n.metric-card:hover .metric-action {\r\n  opacity: 1;\r\n}\r\n\r\n/* Dashboard Grid */\r\n.dashboard-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 1.5rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.dashboard-panel {\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\r\n  overflow: hidden;\r\n  border: 1px solid #f0f0f0;\r\n}\r\n\r\n.panel-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1.5rem;\r\n  border-bottom: 1px solid #f0f0f0;\r\n  background: linear-gradient(135deg, #f8f9fa, #ffffff);\r\n}\r\n\r\n.panel-title {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin: 0;\r\n}\r\n\r\n.panel-icon {\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.panel-action {\r\n  background: none;\r\n  border: none;\r\n  color: #007bff;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.panel-action:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n/* Quick Actions */\r\n.quick-actions {\r\n  padding: 1.5rem;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n}\r\n\r\n.action-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  padding: 1rem;\r\n  border: none;\r\n  border-radius: 12px;\r\n  background: linear-gradient(135deg, #f8f9fa, #ffffff);\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  text-align: left;\r\n  border: 2px solid transparent;\r\n}\r\n\r\n.action-btn:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);\r\n  border-color: #e3f2fd;\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 1.8rem;\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: linear-gradient(135deg, #e3f2fd, #bbdefb);\r\n}\r\n\r\n.btn-title {\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.btn-subtitle {\r\n  font-size: 0.85rem;\r\n  color: #6c757d;\r\n}\r\n\r\n/* Recent Activity */\r\n.activity-list {\r\n  padding: 1.5rem;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.activity-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  padding: 1rem 0;\r\n  border-bottom: 1px solid #f8f9fa;\r\n}\r\n\r\n.activity-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.activity-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.activity-icon.income {\r\n  background: linear-gradient(135deg, #d4edda, #c3e6cb);\r\n}\r\n\r\n.activity-icon.expense {\r\n  background: linear-gradient(135deg, #f8d7da, #f1b0b7);\r\n}\r\n\r\n.activity-icon.invoice {\r\n  background: linear-gradient(135deg, #d1ecf1, #bee5eb);\r\n}\r\n\r\n.activity-icon.bank {\r\n  background: linear-gradient(135deg, #e2e3e5, #d6d8db);\r\n}\r\n\r\n.activity-content {\r\n  flex: 1;\r\n}\r\n\r\n.activity-title {\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.activity-details {\r\n  font-size: 0.9rem;\r\n  color: #6c757d;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.activity-time {\r\n  font-size: 0.8rem;\r\n  color: #adb5bd;\r\n}\r\n\r\n.activity-amount {\r\n  font-weight: 600;\r\n  font-size: 0.95rem;\r\n}\r\n\r\n.activity-amount.positive {\r\n  color: #28a745;\r\n}\r\n\r\n.activity-amount.negative {\r\n  color: #dc3545;\r\n}\r\n\r\n.activity-amount.neutral {\r\n  color: #6c757d;\r\n}\r\n\r\n/* Pending Items */\r\n.pending-list {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.pending-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  padding: 1rem;\r\n  border-radius: 10px;\r\n  margin-bottom: 0.75rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  border: 1px solid #f0f0f0;\r\n}\r\n\r\n.pending-item:hover {\r\n  background: linear-gradient(135deg, #f8f9fa, #ffffff);\r\n  transform: translateX(4px);\r\n}\r\n\r\n.pending-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.2rem;\r\n  background: linear-gradient(135deg, #e3f2fd, #bbdefb);\r\n}\r\n\r\n.pending-content {\r\n  flex: 1;\r\n}\r\n\r\n.pending-title {\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.pending-subtitle {\r\n  font-size: 0.85rem;\r\n  color: #6c757d;\r\n}\r\n\r\n.pending-badge {\r\n  background: linear-gradient(135deg, #dc3545, #c82333);\r\n  color: white;\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 20px;\r\n  font-size: 0.85rem;\r\n  font-weight: 600;\r\n}\r\n\r\n/* Financial Health */\r\n.health-content {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.health-score {\r\n  text-align: center;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.score-circle {\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  border: 6px solid;\r\n}\r\n\r\n.score-circle.excellent {\r\n  border-color: #28a745;\r\n  background: linear-gradient(135deg, #d4edda, #c3e6cb);\r\n}\r\n\r\n.score-circle.good {\r\n  border-color: #17a2b8;\r\n  background: linear-gradient(135deg, #d1ecf1, #bee5eb);\r\n}\r\n\r\n.score-circle.fair {\r\n  border-color: #ffc107;\r\n  background: linear-gradient(135deg, #fff3cd, #ffeaa7);\r\n}\r\n\r\n.score-circle.poor {\r\n  border-color: #dc3545;\r\n  background: linear-gradient(135deg, #f8d7da, #f1b0b7);\r\n}\r\n\r\n.score-value {\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  color: #2c3e50;\r\n}\r\n\r\n.score-label {\r\n  font-size: 0.9rem;\r\n  color: #6c757d;\r\n}\r\n\r\n.health-metrics {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n}\r\n\r\n.health-metric {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  padding: 0.75rem;\r\n  background: linear-gradient(135deg, #f8f9fa, #ffffff);\r\n  border-radius: 10px;\r\n  border: 1px solid #f0f0f0;\r\n}\r\n\r\n.health-metric-icon {\r\n  font-size: 1.5rem;\r\n  width: 35px;\r\n  text-align: center;\r\n}\r\n\r\n.health-metric-content {\r\n  flex: 1;\r\n}\r\n\r\n.health-metric-label {\r\n  font-size: 0.85rem;\r\n  color: #6c757d;\r\n  margin-bottom: 0.25rem;\r\n}\r\n\r\n.health-metric-value {\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n}\r\n\r\n/* Charts Section */\r\n.charts-section {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n.chart-panel {\r\n  background: white;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);\r\n  overflow: hidden;\r\n  border: 1px solid #f0f0f0;\r\n}\r\n\r\n.chart-period {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.period-btn {\r\n  padding: 0.5rem 1rem;\r\n  border: 1px solid #e9ecef;\r\n  background: white;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  font-size: 0.85rem;\r\n  transition: all 0.2s ease;\r\n}\r\n\r\n.period-btn.active,\r\n.period-btn:hover {\r\n  background: #007bff;\r\n  color: white;\r\n  border-color: #007bff;\r\n}\r\n\r\n.chart-container {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.chart-placeholder {\r\n  height: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.chart-bars {\r\n  display: flex;\r\n  align-items: end;\r\n  gap: 1rem;\r\n  height: 150px;\r\n  padding: 0 1rem;\r\n}\r\n\r\n.chart-bar {\r\n  flex: 1;\r\n  background: linear-gradient(0deg, #007bff, #40a9ff);\r\n  border-radius: 4px 4px 0 0;\r\n  min-height: 20px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.chart-bar:hover {\r\n  background: linear-gradient(0deg, #0056b3, #1890ff);\r\n  transform: scaleY(1.1);\r\n}\r\n\r\n.chart-legend {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 1rem;\r\n  font-size: 0.85rem;\r\n  color: #6c757d;\r\n}\r\n\r\n.expense-breakdown {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n}\r\n\r\n.expense-item {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  padding: 1rem;\r\n  background: linear-gradient(135deg, #f8f9fa, #ffffff);\r\n  border-radius: 10px;\r\n  border: 1px solid #f0f0f0;\r\n}\r\n\r\n.expense-color {\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.expense-label {\r\n  flex: 1;\r\n  font-weight: 500;\r\n  color: #2c3e50;\r\n}\r\n\r\n.expense-value {\r\n  font-weight: 600;\r\n  color: #495057;\r\n}\r\n\r\n/* Mobile Responsive */\r\n@media (max-width: 768px) {\r\n  .dashboard-container {\r\n    padding: 1rem;\r\n  }\r\n  \r\n  .welcome-content {\r\n    flex-direction: column;\r\n    gap: 1.5rem;\r\n    text-align: center;\r\n  }\r\n  \r\n  .welcome-title {\r\n    font-size: 1.8rem;\r\n  }\r\n  \r\n  .metrics-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .dashboard-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .quick-actions {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .action-btn {\r\n    flex-direction: column;\r\n    text-align: center;\r\n    gap: 0.75rem;\r\n  }\r\n  \r\n  .charts-section {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .panel-header {\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    align-items: stretch;\r\n  }\r\n  \r\n  .chart-bars {\r\n    gap: 0.5rem;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .welcome-section {\r\n    padding: 1.5rem;\r\n  }\r\n  \r\n  .welcome-title {\r\n    font-size: 1.5rem;\r\n  }\r\n  \r\n  .metric-card {\r\n    flex-direction: column;\r\n    text-align: center;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .company-badge {\r\n    flex-direction: column;\r\n    text-align: center;\r\n    gap: 0.75rem;\r\n  }\r\n  \r\n  .health-metrics {\r\n    gap: 0.75rem;\r\n  }\r\n  \r\n  .score-circle {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  \r\n  .score-value {\r\n    font-size: 1.5rem;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}