# Generated by Django 5.0.14 on 2025-07-25 19:50

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('audit_id', models.AutoField(db_column='AuditID', primary_key=True, serialize=False)),
                ('action', models.CharField(db_column='Action', max_length=100)),
                ('table_name', models.CharField(db_column='TableName', max_length=100)),
                ('record_id', models.IntegerField(db_column='RecordID')),
                ('action_date', models.DateTimeField(auto_now_add=True, db_column='ActionDate')),
                ('details', models.TextField(blank=True, db_column='Details', null=True)),
            ],
            options={
                'db_table': 'AuditLog',
            },
        ),
        migrations.CreateModel(
            name='UserCompanyRole',
            fields=[
                ('user_company_role_id', models.AutoField(db_column='UserCompanyRoleID', primary_key=True, serialize=False)),
                ('role', models.CharField(db_column='Role', max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True, db_column='CreatedDate')),
            ],
            options={
                'db_table': 'UserCompanyRole',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(db_column='UserID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='Username', max_length=150, unique=True)),
                ('password_hash', models.CharField(db_column='PasswordHash', max_length=128)),
                ('email', models.EmailField(db_column='Email', max_length=254)),
                ('first_name', models.CharField(blank=True, db_column='FirstName', max_length=30)),
                ('last_name', models.CharField(blank=True, db_column='LastName', max_length=30)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True)),
                ('avatar', models.ImageField(blank=True, db_column='Avatar', null=True, upload_to='avatars/')),
                ('user_notes', models.TextField(blank=True, db_column='UserNotes', null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, db_column='CreatedDate')),
                ('last_login_date', models.DateTimeField(blank=True, db_column='LastLoginDate', null=True)),
                ('is_active', models.BooleanField(db_column='IsActive', default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set_accounts', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set_accounts', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
